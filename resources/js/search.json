[[{"l":"Welcome","p":["Welcome to the Matter Handbook. This handbook is here to help make building and shipping devices with Matter easier by providing answers to common questions. Inside, you’ll find information on everything from getting started with the Working Groups, the basics of Matter, navigating the SDK, and more.","In the spirit of openness, we’ve tried to capture as much information here as possible. That includes links to resources that are only available to members of the Connectivity Standards Alliance. If you’re not a member and you find yourself clicking through to many of those password-protected areas, we encourage you to consider joining the Alliance to work with us there. If you’re a member of the media and have more questions, we encourage you to take a look at our Newsroom or reach out to press@csa-iot.org.","This handbook is compiled from contributions from our member volunteers as a guide and educational resource. In the case that there is a discrepancy between this handbook and the Matter specification, SDK, or Connectivity Standards Alliance policy, those formal documents are the source of truth. But please let us know! If you have suggestions, edits, or comments, either raise an issue or submit a PR on the GitHub Repository."]}],[{"l":"How It Works","p":["This section goes into detail about how Matter works. Click through the links in the sidebar to learn more about Matter roles, device types, connectivity transports, and more. You can download the Matter specification directly from the Connectivity Standards Alliance's website for the most detail."]}],[{"l":"What is Matter","p":["Matter has the goal of being an interoperable standard that fosters technology adoption and innovation, gradually replacing proprietary protocols for smart home ecosystems.","Matter is implemented by an open source SDK that contains not only the implementation of the specification but also a rich set of examples and interoperable code. The core Matter protocol fits on the top three layers in the context of OSI, meaning it can run over any type of IPv6 transport and network. While control and other operational communication are performed over IPv6, Bluetooth Low Energy (BLE) may be employed to commission new devices.","The Matter Network Stack","Matter is flexible and interoperable. It builds upon years of challenges and successes of low power 802.15.4 networks as well as Wi-Fi smart home devices. Like Thread, Matter builds atop IPv6. It includes strong cryptography, a well-defined modeling of Device Types and their data, and the support for multiple ecosystem administrators.","Matter also supports bridging of other Smart Home technologies such as Zigbee, Bluetooth Mesh and Z-Wave. This means that devices based on these protocols may be operated as if they were Matter devices through a Bridge, which is a member device of both a Matter network and the other, bridged, IoT technologies.","There is a dual advantage to Bridges. The devices that use other protocols gain access to technologies and ecosystems that target native Matter devices. Meanwhile Matter will leverage mature technologies with large installed user bases to create a true web of connected things.","This content was originally published on the Google Developer Site"]}],[{"l":"Roles","p":["An important note is that while these definitions explain the distinct roles as defined in the Matter specification, in many cases, the products in users’ homes have the ability to take on different roles or serve in multiple roles at once."]},{"l":"Matter Device","p":["A smart home hardware product that supports Matter, so that it can be connected to and controlled by a Matter Controller. Examples: light bulbs, switches, sensors, thermostats, blinds, door locks, bridges, and media devices."]},{"l":"Matter Fabric","p":["Matter Devices are connected together on a virtual network within the home called a Matter Fabric, a private virtual network over which Matter Devices, Admins, and Controllers communicate with each other. Matter Fabrics can span across the Wi-Fi, Thread, and Ethernet physical networks within the home. Matter Devices can be connected to one or more Fabrics at a time, each managed by a Matter Administrator. Sometimes Matter Fabrics are referred to as “services” by smart home apps and platforms."]},{"l":"Matter Commissioner","p":["A device or application that is used as a tool to set up a Matter Device, in other words bring it into a Matter Fabric. Commissioners first verify the device’s authenticity and then assign network credentials as needed. A platform, device vendor, or other Matter-enabled app, mobile OS, smart speaker, or display may all provide a Matter Commissioner. A Commissioner can be an independent tool or part of a device or system that includes other roles such as Administrator or Controller."]},{"l":"Matter Administrator","p":["A device or application that creates, maintains, and manages security and privileges for all devices on the Fabric it administers. Administrators can be a physical device like a hub or software like an app. Matter’s Multi-Admin feature which allows Devices to connect to multiple smart home platforms simultaneously, is a reference to connecting Devices to multiple Matter Administrators, and thus to multiple Fabrics."]},{"l":"Matter Controller","p":["As the name suggests, a Matter Controller is an entity that can control Matter devices the user has connected to it. Matter Controller functionality can be built into many types of hardware devices like phones, always-powered smart home hubs that provide local and remote control, smart switches and buttons, or even mobile apps. There can be multiple Matter Controllers on a Fabric to provide redundancy and/or convenient controls for users.","It’s important to note that in most cases, a Matter Controller is exclusive to the company that provides it. For instance, a smart speaker with a Matter Controller from Smart Home Platform A can be used to control Matter devices through the Platform A app, voice control, or other interfaces. But if you want to use Platform B to control Matter devices, you’ll need to have one of Platform B’s Controllers. An exception to this is devices such as switches, buttons, sensors, etc that can be commissioned as third-party Controllers onto a Fabric.","With Matter’s Multi-Admin features, you can connect Matter devices to multiple platforms if you have a Matter Controller for each platform in your home.","Matter Controller is the technical term for this role, though note that many smart home platforms colloquially refer to their devices that contain Matter Controllers as “hubs” (see below)."]},{"l":"Matter Bridge","p":["A Matter Bridge translates from one protocol to another, allowing non-Matter smart home devices (such as those using Zigbee or Z-Wave) to connect to a Matter Fabric via the Bridge. This allows consumers to use their non-Matter smart home devices along with their new Matter devices to continue growing their unified smart home.","A Matter Bridge is a different role than a Controller. A bridge serves as an intermediary for Matter and non-Matter devices. However, Bridges may be built into a number of devices like smart home “hubs” that also serve as Matter Controllers. For a deeper dive read Why Bridging Matters.","This content was first published on the Alliance website as a blog"]}],[{"l":"Supported Device Types","p":["Air Purifier","Air Quality Sensor","Appliances","Application Device Types","As of Matter 1.4 the following types are certifiable.","Basic Video Player","Battery Storage","Bridged Node","Casting Video Client","Casting Video Player","Closures","Color Dimmer Switch","Color Temperature Light","Contact Sensor","Content App","Control Bridge","Cook Surface","Cooktop","Device Energy Management","Dimmable Light","Dimmable Plug-in Unit","Dimmer Switch","Dishwasher","Door Lock","Door Lock Controller","Electrical Sensor","Energy Devices","EVSE","Extended Color Light","Extractor Hood","Fan","Flow Sensor","Generic Switch","Heat Pump","Humidity Sensor","HVAC","In order to be certified a Matter device must conform to one of the approved device types.","Laundry Dryer","Laundry Washer","Light Sensor","Lighting","Media","Microwave Oven","Mounted Dimmable Load Control","Mounted On/Off Control","Network Infrastructure Devices","Network Infrastructure Manager","Occupancy Sensor","On/Off Light","On/Off Light Switch","On/Off Plug-in Unit","On/Off Sensor","OTA Provider","OTA Requestor","Oven","Power Source","Pressure Sensor","Pump","Pump Controller","Rain Sensor","Refrigerator","Robotic Devices","Robotic Vacuum Cleaner","Room Air Conditioner","Root Node","Sensors","Smart Plugs/Outlets and Other Actuators","Smoke CO Alarm","Solar Power","Speaker","Switches and Controls","Temperature Controlled Cabinet","Temperature Sensor","Thermostat","Thread Border Router","Utility Device Types","Video Remote Control","Water Freeze Detector","Water Heater","Water Leak Detector","Water Valve","Window Covering","Window Covering Controller"]},{"l":"Utility Device Types","p":["Utility device types may be include in any device."]},{"l":"Root Node","p":["All devices must include a Root Node on Endpoint 0. This endpoint is akin to a \"read me first\" endpoint that describes itself and the other endpoints that make up the node."]},{"l":"Power Source","p":["This utility device type can be used on one or more endpoints to describe the configuration and capabilities of a physical power source that provides power to one or more endpoints on a node."]},{"l":"OTA Requestor","p":["An OTA Requestor is a device that is capable of receiving an OTA software update."]},{"l":"OTA Provider","p":["An OTA Provider is a node that is capable of providing an OTA software update to other nodes on the same fabric."]},{"l":"Bridged Node","p":["A Bridged Node root endpoint is akin to a \"read me first\" endpoint that describes itself and any other endpoints that make up the Bridged Node. A Bridged Node endpoint represents a device on a foreign network, but is not the root endpoint of the bridge itself."]},{"l":"Electrical Sensor","p":["An Electrical Sensor device measures the electrical power and/or energy passing through it. This device type can be added to any matter device so that its electrical power and energy consumption or production can be reported."]},{"l":"Device Energy Management","p":["A Device Energy Management device provides reporting and optionally adjustment of the electrical power planned on being consumed or produced by the device.","This allows it to be used to help energy management systems to optimize the energy use across multiple devices in the home (e.g. to match the local solar power being generated, or to provide assistance to the grid)."]},{"l":"Application Device Types"},{"l":"Lighting"},{"l":"On/Off Light","p":["The On/Off Light is a lighting device that is capable of being switched on or off by means of a bound controller device such as an On/Off Light Switch or a Dimmer Switch. In addition, an on/off light is also capable of being switched by means of a bound occupancy sensor."]},{"l":"Dimmable Light","p":["A Dimmable Light is a lighting device that is capable of being switched on or off and the intensity of its light adjusted by means of a bound controller device such as a Dimmer Switch or a Color Dimmer Switch. In addition, a Dimmable Light device is also capable of being switched by means of a bound occupancy sensor or other device(s)."]},{"l":"Color Temperature Light","p":["A Color Temperature Light is a lighting device that is capable of being switched on or off, the intensity of its light adjusted, and its color temperature adjusted by means of a bound controller device such as a Color Dimmer Switch."]},{"l":"Extended Color Light","p":["An Extended Color Light is a lighting device that is capable of being switched on or off, the intensity of its light adjusted, and its color adjusted by means of a bound controller device such as a Color Dimmer Switch or Control Bridge. The device supports adjustment of color by means of hue/saturation, enhanced hue, color looping, XY coordinates, and color temperature. In addition, the extended color light is also capable of being switched by means of a bound occupancy sensor."]},{"l":"Smart Plugs/Outlets and Other Actuators"},{"l":"On/Off Plug-in Unit","p":["An On/Off Plug-in Unit is a device that is capable of being switched on or off by means of a bound controller device such as an On/Off Light Switch or a Dimmer Switch. The On/Off Plug-in Unit is typically used to control a conventional non-communicating light by switching its mains connection. Other appliances can be controlled this way as well."]},{"l":"Dimmable Plug-in Unit","p":["A Dimmable Plug-In Unit is a device that is capable of being switched on or off and have its level adjusted by means of a bound controller device such as a Dimmer Switch or a Color Dimmer Switch. The Dimmable Plug-in Unit is typically used to control a conventional non-communicating light through its mains connection using phase cutting."]},{"l":"Mounted On/Off Control","p":["A Mounted On/Off Control is a fixed device that provides power to another device that is plugged into it, and is capable of switching that provided power on or off."]},{"l":"Mounted Dimmable Load Control","p":["A Mounted Dimmable Load Control is a fixed device that provides power to another device that is plugged into it, and is capable of being switched on or off and have its level adjusted. The Mounted Dimmable Load Control is typically used to control a conventional non-communicating light through its mains connection using phase cutting."]},{"l":"Pump","p":["A Pump device is a pump that may have variable speed. It may have optional built-in sensors and a regulation mechanism. It is typically used for pumping fluids like water."]},{"l":"Water Valve","p":["A Water Valve can be used to control the flow of water, including automatic closing after a specified duration, with optional features to support opening levels. It may optionally include flow measurement sensors."]},{"l":"Switches and Controls"},{"l":"On/Off Light Switch","p":["An On/Off Light Switch is a controller device that, when bound to a lighting device such as an On/Off Light, is capable of being used to switch the device on or off."]},{"l":"Dimmer Switch","p":["A Dimmer Switch is a controller device that, when bound to a lighting device such as a Dimmable Light, is capable of being used to switch the device on or off and adjust the intensity of the light being emitted."]},{"l":"Color Dimmer Switch","p":["A Color Dimmer Switch is a controller device that, when bound to a lighting device such as an Extended Color Light, is capable of being used to adjust the color of the light being emitted."]},{"l":"Control Bridge","p":["A Control Bridge is a controller device that, when bound to a lighting device such as an Extended Color Light, is capable of being used to switch the device on or off, adjust the intensity of the light being emitted and adjust the color of the light being emitted. In addition, a Control Bridge device is capable of being used for setting scenes."]},{"l":"Pump Controller","p":["A Pump Controller device is capable of configuring and controlling a Pump device."]},{"l":"Generic Switch","p":["A generic switch can be either momentary or latching in state, with multiple positions.","The Generic Switch device type and the On/Off Light Switch device type both convey information about interactions with a switch to another device.","The On/Off Light Switch will send On/Off/Toggle commands from its On/Off (client) cluster to a device implementing the On/Off (server) cluster to control the on/off functionality of that device. An On/Off Light Switch device can also implement Groups and Scenes clusters and thus send group and scene commands. Basically, it is targeted at directly sending control commands to other devices. The binding table is used to tell the device where to send the commands.","The Generic Switch device type will send updates of attributes (for Latching Switch only) and events to subscribed parties which implement the Switch client cluster, as indications of inter­ action with the switch - leaving the interpretation (e.g. which device should be actuated because of the interaction) to the subscribed party. So it can be compared to a sensor-type device.","This allows a more comprehensive controller to combine the information from the switch with other inputs or information sources (e.g. time of day, user presence) to determine which control commands (e.g. on/off, scene recall, attribute change) are sent to other devices in the network."]},{"l":"Sensors"},{"l":"Contact Sensor","p":["The Contact Sensor is a device that reports a boolean state, typically open/closed."]},{"l":"Light Sensor","p":["A Light Sensor device is a measurement and sensing device that is capable of measuring and reporting the intensity of light (illuminance) to which the sensor is being subjected."]},{"l":"Occupancy Sensor","p":["An Occupancy Sensor is a measurement and sensing device that is capable of measuring and reporting the occupancy state in a designated area."]},{"l":"Temperature Sensor","p":["A Temperature Sensor device reports measurements of temperature."]},{"l":"Pressure Sensor","p":["A Pressure Sensor device measures and reports the pressure of a fluid."]},{"l":"Flow Sensor","p":["A Flow Sensor device measures and reports the flow rate of a fluid."]},{"l":"Humidity Sensor","p":["A humidity sensor (in most cases a Relative humidity sensor) reports humidity measurements."]},{"l":"On/Off Sensor","p":["An On/Off Sensor is a measurement and sensing device that, when bound to a lighting device such as a Dimmable Light, is capable of being used to switch the device on or off."]},{"l":"Smoke CO Alarm","p":["A Smoke CO Alarm device is capable of sensing smoke, carbon monoxide or both. It is capable of issuing a visual and audible alert to indicate elevated concentration of smoke or carbon monoxide. Smoke CO Alarms are capable of monitoring themselves and issuing visual and audible alerts for hardware faults, critical low battery conditions, and end of service. Optionally, some of the audible alerts can be temporarily silenced. Smoke CO Alarms are capable of performing a self-test which performs a diagnostic of the primary sensor and issuing a cycle of the audible and visual life safety alarm indications. Some smoke alarms MAY be capable of adjusting sensitivity. Smoke CO Alarm MAY have the ability to detect and report humidity levels, temperature levels, and contamination levels."]},{"l":"Air Quality Sensor","p":["An air quality sensor is a device designed to monitor and measure various parameters related to the quality of ambient air in indoor or outdoor environments."]},{"l":"Water Freeze Detector","p":["A Water Freeze Detector device is able to indicate the likelihood that water could potentially freeze in the current ambient conditions."]},{"l":"Water Leak Detector","p":["A Water Leak Detector device is able to indicate if a water leak is detected."]},{"l":"Rain Sensor","p":["A Rain Sensor device is able to indicate if rain is detected."]},{"l":"Closures"},{"l":"Door Lock","p":["A Door Lock is a device used to secure a door. It is possible to actuate a door lock either by means of a manual or a remote method."]},{"l":"Door Lock Controller","p":["A Door Lock Controller is a device capable of controlling a door lock."]},{"l":"Window Covering","p":["A window covering is a device that actuates a cover for a window, typically a blind. The covering can be vertical or horizontal and optionally the tilt of the sections in the covering can be changed."]},{"l":"Window Covering Controller","p":["A Window Covering Controller is a device that controls a window covering device."]},{"l":"HVAC"},{"l":"Thermostat","p":["A Thermostat device is capable of having either built-in or separate sensors for temperature, humidity or occupancy. It allows the desired temperature to be set either remotely or locally. The thermostat is capable of sending heating and/or cooling requirement notifications to a heating/cooling unit (for example, an indoor air handler) or is capable of including a mechanism to control a heating or cooling unit directly."]},{"l":"Fan","p":["A Fan device is typically standalone or mounted on a ceiling or wall and is used to circulate air in a room."]},{"l":"Air Purifier","p":["An Air Purifier is a standalone device that is designed to clean the air in a room. It is a device that has a fan to control the air speed while it is operating. Optionally, it can report on the condition of its filters."]},{"l":"Media"},{"l":"Basic Video Player","p":["A Basic Video Player represents a device that is able to play media to a physical output or to a display screen which is part of the device. A Basic Video Player has playback controls (play, pause, etc.) and keypad remote controls (up, down, number input), but is not able to launch content and is not a content app platform. For example, a Basic Video Player can be a traditional TV device a physical media playback device such as a DVD Player, or a device that provides input to another device like a TV or computer monitor."]},{"l":"Casting Video Player","p":["A Casting Video Player represents a device that is able to play media to a physical output or to a display screen which is part of the device. A Casting Video Player has basic controls for playback (play, pause, etc.) and keypad input (up, down, number input), and is able to launch content. For example, a Casting Video Player can be a smart TV device, a TV Set Top Box, or a content streaming device that provides input to another device like a TV or computer monitor."]},{"l":"Speaker","p":["This feature controls the speaker volume of the device. To control unmute/mute, the On/Off cluster SHALL be used. A value of TRUE for the OnOff attribute SHALL represent the volume on (not muted) state, while a value of FALSE SHALL represent the volume off (muted) state. For volume level control, the Level cluster SHALL be used. A dedicated endpoint is needed because the On/Off cluster can also be used for other purposes, such as for power control."]},{"l":"Content App","p":["A Content App is usually an application built by a Content Provider. A Casting Video Player with a Content App Platform is able to launch Content Apps and represent these apps as separate end­ points."]},{"l":"Casting Video Client","p":["A Casting Video Client is a client that can launch content on a Casting Video Player, for example, a Smart Speaker or a Content Provider phone app."]},{"l":"Video Remote Control","p":["A Video Remote Control is a client that can control a Video Player, for example, a traditional universal remote control."]},{"l":"Robotic Devices"},{"l":"Robotic Vacuum Cleaner","p":["A robotic vacuum cleaner is a device capable of autonomous cleaning, the cleaning mode may be selected from a number of predefined options and the device should report back any error states."]},{"l":"Appliances"},{"l":"Refrigerator","p":["A refrigerator represents a device that contains one or more cabinets that are capable of chilling or freezing food. Examples of consumer products that MAY make use of this device type include refrigerators, freezers, and wine coolers."]},{"l":"Temperature Controlled Cabinet","p":["A Temperature Controlled Cabinet only exists composed as part of another device type. It represents a single cabinet chilling or freezing food in a refrigerator, freezer, wine chiller or other similar device."]},{"l":"Room Air Conditioner","p":["A Room Air Conditioner is a device with the primary function of controlling the air temperature in a single room."]},{"l":"Laundry Washer","p":["A Laundry Washer represents a device that is capable of laundering consumer items. Any laundry washer product may utilize this device type."]},{"l":"Dishwasher","p":["A dishwasher is a device that is generally installed in residential homes and is capable of washing dishes, cutlery, and other items associate with food preparation and consumption. The device can be permanently installed or portable and can have variety of filling and draining methods."]},{"l":"Laundry Dryer","p":["A Laundry Dryer represents a device that is capable of drying laundry items."]},{"l":"Cook Surface","p":["A Cook Surface device type represents a heating object on a cooktop or other similar device. It SHALL only be used when composed as part of another device type."]},{"l":"Cooktop","p":["A cooktop is a cooking surface that heats food either by transferring currents from an electromagnetic field located below the glass surface directly to the magnetic induction cookware placed above or through traditional gas or electric burners."]},{"l":"Oven","p":["An oven represents a device that contains one or more cabinets, and optionally a single cooktop, that are all capable of heating food. Examples of consumer products implementing this device type include ovens, wall ovens, convection ovens, etc."]},{"l":"Extractor Hood","p":["An Extractor Hood is a device that is generally installed above a cooking surface in residential kitchens. An Extractor Hood’s primary purpose is to reduce odors that arise during the cooking process by either extracting the air above the cooking surface or by recirculating and filtering it. It may also contain a light for illuminating the cooking surface."]},{"l":"Microwave Oven","p":["A Microwave Oven is a device with the primary function of heating foods and beverages using a magnetron. A Microwave Oven is a device which at a minimum is capable of being started and stopped and of setting a power level."]},{"l":"Energy Devices"},{"l":"EVSE","p":["An EVSE (Electric Vehicle Supply Equipment) is a device that allows an EV(Electric Vehicle) to be connected to the mains electricity supply to allow it to be charged (or discharged in case of Vehicle to Grid / Vehicle to Home applications)."]},{"l":"Water Heater","p":["A water heater is a device that is generally installed in properties to heat water for showers, baths etc."]},{"l":"Solar Power","p":["A Solar Power device is a device that allows a solar panel array, which can optionally be comprised of a set parallel strings of solar panels, and its associated controller and, if appropriate, inverter, to be monitored and controlled by an Energy Management System."]},{"l":"Battery Storage","p":["A Battery Storage device is a device that allows a DC battery, which can optionally be comprised of a set parallel strings of battery packs and associated controller, and an AC inverter, to be monitored and controlled by an Energy Management System in order to manage the peaks and troughs of supply and demand, and/or to optimize cost of the energy consumed in premises. It is not intended to be used for a UPS directly supplying a set of appliances, nor for portable battery storage devices."]},{"l":"Heat Pump","p":["A Heat Pump device is a device that uses electrical energy to heat either spaces or water tanks using ground, water or air as the heat source. These typically can heat the air or can pump water via central heating radiators or underfloor heating systems. It is typical to also heat hot water and store the heat in a hot water tank.","Note that the Water Heater device type can also be heated by a heat pump and has similar requirements, but that device cannot be used for heating of spaces."]},{"l":"Network Infrastructure Devices"},{"l":"Network Infrastructure Manager","p":["A Network Infrastructure Manager provides interfaces that allow for the management of the Wi-Fi, Thread, and Ethernet networks underlying a Matter deployment, realizing the Star Network Topology."]},{"l":"Thread Border Router","p":["A Thread Border Router device type provides interfaces for querying and configuring the associated Thread network. Instances of physical devices categorized as Thread Border Routers encompass standalone Thread Border Routers, conventional application devices like smart speakers, media streamers, and lighting fixtures equipped with a Thread Border Router, as well as Wi-Fi Routers incorporating Thread Border Router functionality."]}],[{"l":"Device Data Model","p":["Devices in Matter have a well-defined data model (DM), which is a hierarchical modeling of a Device's features. At the top level of this hierarchy there is a Device."]},{"l":"Devices and Endpoints","p":["All Devices, including smartphones and home assistants, are composed of Nodes. A Node is a unique identifiable and addressable resource in a network that a user can perceive as functionally whole. Network communication in Matter originates and terminates at a Node.","Nodes are a collection of Endpoints. Each Endpoint encloses a feature set. For instance, an Endpoint might relate to a lighting functionality, while another relates to motion detection, and another deals with utilities such as Device OTA.","Devices Nodes and Endpoints"]},{"l":"Node Roles","p":["A Node role is a set of related behaviors. Each Node may have one or more roles. Node roles include:","Commissioner: A Node that performs Commissioning.","Controller: A Node that can control one or more Nodes. Examples include a phone app used for device setup, the Hub associated with the setup app which might be embedded in a Router, Smart Speaker, TV or Smart Panel. Some device types, such as the On/Off Light Switch, have the Controller role.","Controlee: A Node that can be controlled by one or more Nodes. Most device types can be a Controlee, except for some device types which have the Controller role, such as the On/Off Light Switch. The On/Off Light Switch can only be a Controller. It cannot be a Controlee.","OTA Provider: A Node that can provide OTA software updates.","OTA Requestor: A Node that can request OTA software updates."]},{"l":"Clusters","p":["Within an Endpoint a Node has one or more Clusters. These are another step in the Device hierarchy, as they group specific functionality such as a on/off cluster on a smart plug, or a level control cluster on a dimmable light Endpoint.","A Node may also have several Endpoints, each creating an instance of the same functionality. For example, a light fixture may expose independent control of individual lights or a power strip may expose control of individual sockets."]},{"l":"Attributes","p":["At the last level we'll find Attributes, which are states held by the node, such as the current level attribute of a level control cluster. Attributes may be defined as different data types such as uint8, strings or arrays.","Nodes, Endpoints, Attributes and Commands"]},{"l":"Commands","p":["Besides Attributes, Clusters also have Commands, which are actions that may be performed. They are the equivalent in Matter's data model of a remote procedure call. Commands are verb-like, such as lock door on a Door Lock cluster. Commands may generate responses and results; in Matter, such responses are also defined as Commands, going in the reverse direction."]},{"l":"Events","p":["Lastly, Clusters may also have Events, which can be thought of as a record of past state transitions. While Attributes represent the current states, events are a journal of the past, and include a monotonically increasing counter, a timestamp and a priority. They enable capturing state transitions, as well as data modeling that is not readily achieved with attributes.","A sample of the hierarchy of Matter Devices interaction model","The Endpoint 0 is reserved for the Utility Clusters. Utility Clusters are specific Clusters that enclose servicing functionality on an Endpoint, such as discovery, addressing, diagnostics and software update. On the other hand, the Application Clusters support primary actions such as on/off or temperature measurement."]},{"l":"Device Types","p":["Altogether, which Cluster combinations should be included as a device manufacturer plans a new Device?","The Matter specification requires that the device implement or extend one or more Device Types. A Device Type is a collection of mandatory and optional Clusters that define the top-level attributes of a physical device, such as Dimmable Light, Door Lock, or Video Player.","The Device Types are not specified by the Matter specification main document, but by an accompanying document: the Device Library. Similarly, all Application Clusters are defined in the Application Cluster Library. These three documents can be found on the Connectivity Standards Alliance (Alliance) website.","Each Endpoint implementing a Device Type must implement the mandatory Clusters that define that Device Type. In addition to the mandatory Clusters, the Endpoint may implement additional Clusters, including one or more of the Device Type's optional Clusters, or even Clusters that aren't part of the Device Type."]},{"l":"Clients and Servers","p":["Clusters might be either a Client Cluster or a Server Cluster. While a Server is stateful and holds Attributes, Events and Commands, a Client is stateless and its responsibility is to initiate Interactions with a remote Server Cluster, thus performing:","reads from and writes to its remote Attributes","reads of its remote Events","invocation of its remote Commands.","While the DM is hierarchical within a Node, the relationship between Nodes is not. Nodes in Matter do not have vertical controller/peripheral or leader/follower relationships. On the contrary, the relationship is horizontal: Any Cluster may be either Server or Client. Thus a Node may be both Server and Client with regards to different Clusters and functionalities.","For instance, we may have two table lamps: Node A and Node B. Both nodes implement an On/Off Light Device Type. This Device Type includes an On/Off Server Cluster that controls their respective physical light outputs.","But, as typical table lamps do, our physical devices will also include an On/Off Light Switch Device Type for their local on/off switches. This Device Type must implement an On/Off Client Cluster so it may control the Server Clusters.","Client and Server Clusters","In this sample, the On/Off Client Cluster on Node A is changing the attributes of the On/Off Server Cluster on Node A and Node B, while the Node B's Client Cluster is only changing the Server Cluster on Node B itself.","In the next section we'll detail how Client and Server Clusters interact: the Interaction Model."]},{"l":"Descriptor Cluster","p":["As the name implies, the Descriptor Cluster Server provides introspection information. It describes the Endpoint enumerating its:","Server Clusters","Client Clusters","Device Types","Additional Endpoints, known as Parts.","Every Device Type requires the implementation of Descriptor Clusters. The Root Device Type is defined on Endpoint 0. Reading its Descriptor Cluster will provide the client the visibility to traverse the full tree of available Endpoints and perform applicable operations.","The Commissioner or Controlling device such as a phone or hub can use the information found on the Descriptor Cluster to model the Device (light, switch, pump, thermostat), and specific features implemented by that particular instance of the Device, showing the correct UI to the user."]},{"l":"Server Clusters","p":["The ServerList Attribute lists the Cluster Servers in the Endpoint."]},{"l":"Client Clusters","p":["The ClientList Attribute lists the Cluster Clients in the Endpoint."]},{"l":"Device Type List","p":["The DeviceTypeList Attribute is a list of Device Types supported by the Endpoint, along with its respective revisions. It must contain at least one Device Type."]},{"l":"Parts List","p":["The PartsList contains the list of Endpoints used for implementing this Device Type.","The PartsList of Endpoint 0 (Root Node) contains all the Endpoints of the device apart from itself (Endpoint 0).","The PartsList of other Endpoints will usually be empty. For example, a Temperature Sensor mandates a Temperature Measurement Server Cluster and nothing else.","Other device types might be composed in a tree structure of more than one Device Type instance. For example, a Video Player Device type can be composed of TV, Video Player, Speaker and different Content App Device Types, each on a different Endpoint.","This content was originally published on the Google Developer Site"]}],[{"l":"Connectivity Transports","p":["In principle, any IPv6-bearing network is suitable for Matter deployment, subject to supporting a few core IPv6 standards. In the current version of the specification, we focus on three link layer technologies: Ethernet, Wi-Fi and Thread. We restrict the specification to the above so that the specification can suitably cover provisioning of these link layers, and so that the amount of testing in certification is suitably bounded.","Matter treats networks as shared resources: it makes no stipulation of exclusive network owner­ship or access. As a result, it is possible to overlay multiple Matter networks over the same set of constituent IP networks. This protocol may operate in the absence of globally routable IPv6 infrastructure. This requirement enables operation in a network disconnected or firewalled from the global Internet. It also enables deployment in situations where the Internet Service Provider either does not support IPv6 on consumer premises or where the support proves otherwise limiting, for example, if the delegated pre­fix cannot accommodate all the networks and devices on premises. This protocol supports local communications spanning one or more IPv6 subnets. Canonical net­works supporting a fabric may include a Wi-Fi/Ethernet subnet, or one or more low power and lossy networks (LLN) subnets. In this version of the specification, Thread is the supported LLN standard. Matter uses IPv6 for its operational communications, and leverages both IPv6 Unicast and Multicast addressing for accessing its Nodes and Groups, respectively."]},{"l":"Ethernet","p":["This is the simplest transport for Matter, as there is no need to communicate any network credentials to the device; it is simply connected to the Ethernet network. Commissioning of devices should use the on-network bitmask in the Discovery Capabilities of the Onboarding Payload and the device will be discovered via DNS-SD."]},{"l":"Wi-Fi","p":["Matter devices may use the 802.11 (Wi-Fi) standard for connectivity, any of the approved versions of this spec are compatible with Matter and all the approved frequency bands may be used (subject to local regulatory limits). In order for a Matter device that uses Wi-Fi to be certified the manufacturer must first obtain Wi-Fi certification for the device from the Wi-Fi Alliance. This can often be obtained via the Wi-Fi chipset vendors existing certification. For commissioning, Wi-Fi devices may use the Bluetooth Low Energy (BLE) method of discovery and conveying of network credentials or the device may already be connected to the IP network via an existing proprietary method."]},{"l":"Thread","p":["Thread is a low power 802.15.4 mesh-based radio protocol designed for IP transport. There are a number of additional considerations when using Thread for a Matter device which are explained on the dedicated Thread page of this site. In order for a device that uses Thread to be Matter certified, the manufacturer must first obtain Thread certification for the device from the Thread Group. When a device uses Thread, it must also use BLE for Discovery and Commissioning in order to provision the Thread network credentials to the device."]},{"l":"Bluetooth","p":["BLE is used in Matter as part of the discovery and commissioning stage as a method for passing the credentials of the Wi-Fi or Thread network that the device will use for operational communication. BLE is required where a device uses Thread and optional for Wi-Fi. BLE cannot be used as the sole transport technology for a Matter Device."]}],[{"l":"Interaction Model"},{"l":"Concepts","p":["The Data Model (DM) of a Node isn't relevant if we can't perform operations on them. The Interaction Model (IM), defines a Node's DM relationship with the DM of other Nodes: a common language for communication between DMs.","Nodes interact with each other by:","Reading and Subscribing to Attributes and Events","Writing to Attributes","Invoking Commands.","Whenever a Node establishes an encrypted communication sequence with another Node, they constitute an Interaction relationship. Interactions may be composed of one or more Transactions, and Transactions are composed of one or more of Actions which can be understood as IM-level messages between Nodes.","Hierarchy of Interaction Model","Several Actions are supported on Transactions, such as a Read Request Action that requests an Attribute or Event from another Node, or its response, the Report Data Action, which carries the information back from the server to the client."]},{"l":"Initiators and Targets","p":["The Node that initiates a Transaction is the Initiator, while the Node that responds is the Target. Typically the Initiator is a Client Cluster and the Target is a Server Cluster. However, there are exceptions to this pattern, such as in the Subscription Interactions analyzed further down in this section."]},{"l":"Groups","p":["Nodes and Endpoints in Matter may belong to a Group. A Group is a mechanism for addressing and sending messages to several Nodes in the same Action simultaneously. All Nodes in a Group share the same Group ID, a 16-bit integer.","To accomplish group-level communication (Groupcast), Matter leverages IPv6 Multicast messages, and all Group members have the same Multicast address."]},{"l":"Paths","p":["Whenever we want to interact with an Attribute, Event, or Command, we must specify the Path for this interaction: the location of an Attribute, Event or Command in the Data Model hierarchy of a Node. The caveat is that paths may also use Groups or Wildcard Operators to address several Nodes or Clusters simultaneously, aggregating these Interactions and thus decreasing the number of actions.","This mechanism is important to enhance the responsiveness of communications. For example, when a user wants to shut down all lights, a voice assistant can establish a single interaction with several lights within a Group instead of a sequence of individual Interactions. If the Initiator creates individual Interactions with each light, it can generate human-perceptible latency in Device responsiveness. This effect causes the multiple Devices to react to a command with visible delays between them. This is often referred to as \"popcorn effect\".","A Path in Matter can be assembled using one of the options below:","And within these Path building blocks, endpoint and cluster may also include Wildcards Operators for selecting more than one Node instance."]},{"l":"Timed and Untimed","p":["There are two ways of performing a Write or Invoke Transaction: Timed and Untimed. Timed Transactions establish a maximum timeout for the Write/Invoke Action to be sent. The purpose of this timeout is to prevent an Intercept Attack on the Transaction. It is especially valid for Devices that gate access to assets, such as garage openers and locks.","To understand Timed Transactions it's useful to understand how Intercept Attacks can happen and why Timed Transactions are important."]},{"l":"The Intercept Attack","p":["An Intercept Attack has the following pattern:","Alice sends Bob an initial message, such as a Write Request Action.","Eve, a man-in-the-middle, intercepts the message and prevents Bob from receiving it, for example through some type of radio jamming.","Alice, not receiving a response from Bob, sends a second message. Eve intercepts again and prevents Bob from receiving it.","Eve sends the first intercepted message to Bob, as if it were coming from Alice.","Bob sends the response to Alice (and Eve).","Eve holds the second intercepted message for a later replay. Since Bob never received the original second intercepted message from Alice, it will accept it. This message represent a security breach when the message encodes a command such as \"open lock\".","To prevent these types of attacks, Timed Actions set a maximum Transaction timeout at the start of the Transaction. Even if Eve manages to execute the first six steps of the attack vector, it will not be able to replay the message on step 7 due to an expired timeout on the Transaction.","Timed Transactions increase the complexity and number of Actions. Thus they are not recommended for every Transaction, but only the critical operations on Devices that have control over physical or virtual security and privacy assets."]},{"l":"SDK abstractions","p":["The sections Read Transactions, Write Transactions, and Invoke Transactions provide a high-level overview of the Interaction Model Actions performed by the SDK.","The developer creating a product that uses the Matter SDK typically does not perform calls to execute Actions directly; the Actions are abstracted by SDK functions that will encapsulate them into an Interaction. However, understanding IM Actions is important to provide the engineer a good proficiency on the capabilities of Matter, as well as fine control over the SDK implementation."]},{"l":"Read Transactions"},{"l":"Read Transaction","p":["One of the first use cases when interacting with Nodes in Matter is the reading of an Attribute from another Node, such as a temperature value from a sensor. In such Interactions, the first Action that must be performed is the Read Request Action."]},{"l":"Read Request Action","p":["Direction: Initiator -> Target","In this Action the Initiator queries a Target providing:","Attribute Requests: a list of zero or more of the Target's Attributes. This list is composed of zero or more Paths to the Target's requested Attributes.","Event Requests: list of zero or more Paths to the Target's requested Events. After the Read Request Action is received by the Target it will assemble a Report Data Action with the requested information.","Read Transaction","After the Read Request Action is received by the Target it will assemble a Report Data Action with the requested information."]},{"l":"Report Data Action","p":["Direction: Target -> Initiator","In this Action the Target responds with:","Attribute Reports: a list of zero or more of the reported Attributes requested in the Read Action Request.","Event Reports: a list of zero or more reported Events.","Suppress Response: a flag that determines whether the status response to this action should be suppressed.","Subscription ID: if this report is part of a subscribing transaction, it must include an integer used to identify the subscription transaction."]},{"l":"Status Response Action","p":["Direction: either Target -> Initiator or Initiator -> Target","Once the Initiator receives the requested data, by default it must generate a Status Response Action. This action is sent from the Initiator, acknowledging the receipt of the reported data. If the flag Suppress Status Response is set, the Initiator must not send the Status Response Action.","Once the Status Response Action is sent by the Initiator, or a Report Data Action is received by the Initiator with the Suppress Response flag enabled, the read/report query is finished.","The Status Response Action simply contains a status field that will either acknowledge operation success or present a failure code."]},{"l":"Read Restrictions","p":["The Read Request Action and Report Data Action are Unicast-only. Moreover, the Paths of these requests may not target a Group of Nodes.","The Status Response Action is Unicast-only and can't be generated as a response to a groupcast."]},{"l":"Subscription Transaction"},{"l":"Subscribe Request Action","p":["Direction: Initiator -> Target","In addition to a singular Read Request Action, an Initiator may also subscribe to periodic updates of an Attribute or Event. Thus the same Report Data Action can be generated as a result of periodic data updates that follow a Subscription Transaction.","A Subscription Interaction creates a relationship between two Nodes, in which the Target periodically generates Report Data Actions to the Initiator. The Initiator is the Subscriber and the Target is the Publisher.","Subscription Transaction","A Subscribe Request Action contains:","Min Interval Floor: the minimum interval between reports.","Max Interval Ceiling: the maximum interval between reports.","Attribute Reports: a list of zero or more of the reported Attributes requested in the Read Action Request.","Event Reports: a list of zero or more reported Events.","After the Subscribe Request, the Target responds to the Initiator with a Report Data Action containing the first batch of reported data: the Primed Published Data.","The Initiator then acknowledges the Report Data Action with a Status Response Action sent to the Target. Once the Target receives a Status Response Action reporting no errors, it sends a Subscribe Response Action.","The Target will subsequently send Report Data Action periodically at the negotiated interval and the Initiator will respond to those Actions until the subscription is lost or cancelled."]},{"l":"Subscribe Response Action","p":["Direction: Target -> Initiator","This is the last Action on the Subscription Transaction and concludes the process. It includes:","Subscription ID: a integer that identifies the subscription.","Min Interval: the final, determined minimum interval between reports.","Max Interval: the final, determined maximum interval between reports."]},{"l":"Subscribe Restrictions","p":["The Subscribe Request Action and the Subscribe Response Action are Unicast-only actions.","All Report Data Actions in a Subscription Interaction must have the same Subscription ID.","If the Subscriber does not receive a Report Data Action within the maximum negotiated interval between Actions, the subscription will be terminated.","As a consequence of the previous rule, the Publisher may terminate a Subscription Interaction by simply stopping sending periodic Report Data Actions.","The Subscriber may terminate the Subscription Interaction by responding to a Report Data Action with an INACTIVE_SUBSCRIPTION status code."]},{"l":"Write Transactions","p":["In the last section we discussed the reading interactions of Attributes and Events. In this section we'll discuss the writing of Attributes, which is the change of an Attribute value on a Cluster such as Level."]},{"l":"Untimed Write Transaction"},{"l":"Write Request Action","p":["Direction: Initiator -> Target","Similar to the Read Request Action, in this Action the Initiator provides the Target with:","Write Requests: a list of one or more tuples containing Path and data.","Timed Request: a flag that indicates whether this Action is part of a Timed Write Transaction.","Suppress Response: a flag that indicates whether the Response Status Action should be suppressed.","Untimed Write Transaction"]},{"l":"Write Response Action","p":["Direction: Target -> Initiator","After the Target receives the Write Request Action it will finalize the transaction with a Write Response Action that carries:","Write Responses: a list of paths and error codes for every Write Request sent on the Write Request Action."]},{"l":"Untimed Write Restrictions","p":["The Write Request Action may be a groupcast, but in this case the Suppress Response flag must be set. The rationale is that otherwise the network might be flooded by simultaneous responses from every member of a group.","To enable this behavior, the Path used in the Write Requests list may contain Groups and alternatively they may contain wildcards, but only on the Endpoint field."]},{"l":"Timed Write Transaction","p":["Timed write transactions add a few steps to untimed write transactions."]},{"l":"Timed request action","p":["Direction: Initiator -> Target","A Initiator starts the Transaction sending this Action that contains:","Timeout: how many milliseconds this transaction may remain open. During this period the next action sent by the Initiator will be considered valid.","Once the Timed Request Action is received, the Target must acknowledge the Timed Request Action with a Status Response Action. Once the Initiator receives a Status Response Action reporting no errors, it will send a Write Request Action."]},{"i":"write-request-action-1","l":"Write Request Action","p":["Same as the previously described Write Request Action."]},{"i":"write-response-action-1","l":"Write Response Action","p":["Same as the previously described Write Response Action."]},{"l":"Timed Write Restrictions","p":["The Timed Request Action, the Write Request Action and the Write Response Action are unicast-only."]},{"l":"Invoke Transactions","p":["Invoke Transactions are used for invoking one or more Cluster Commands on a Target Node. It is similar to remote procedures calls made to a command defined in the Cluster.","In a similar way of Write Transactions, Invoke Transactions support Timed and Untimed Transactions. Please refer to the Timed and Untimed Actions section for further information on Timed Transactions."]},{"l":"Untimed Invoke Transaction"},{"l":"Invoke Request Action","p":["Direction: Initiator -> Target","Similar to the Read Request Action and Write Request Action, in this Action the Initiator provides the Target with:","Invoke Requests: a list of paths to Cluster Commands, as well as optional arguments to the commands, named Command Fields.","Timed Request: a flag that indicates whether this action is part of a Timed Invoke Transaction.","Suppress Response: a flag that indicates whether the Invoke Response Action should be suppressed.","Interaction ID: an integer used for matching the Invoke Request Action to the Invoke Response Action.","Untimed Invoke Transaction"]},{"l":"Invoke Response Action","p":["Direction: Target -> Initiator","After the Target receives the Invoke Request Action it will finalize the transaction with an Invoke Response Action that carries:","Invoke Responses: a list of command responses or status for every invoke request sent.","Interaction ID: a integer used for matching the Invoke Response Action to the Invoke Request Action."]},{"l":"Untimed Invoke Restrictions","p":["The Invoke Request Action may be a groupcast, but in this case the Suppress Response flag must be set. The rationale is that otherwise the network might be flooded by simultaneous responses from every member of a group.","To enable this behavior the Path used in the Invoke Requests list may contain Groups and alternatively they may contain wildcards, but only on the Endpoint field. Moreover, if the Action is groupcast, this transaction terminates with no response."]},{"l":"Timed Invoke Transactions","p":["Similar to Timed Write Transactions, Timed Invoke Transactions also start with the Timed Request Action."]},{"i":"timed-request-action-1","l":"Timed Request Action","p":["Direction: Initiator -> Target","A Initiator starts the Transaction sending this Action that contains:","Timeout: how many milliseconds this transaction may remain open. During this period the next action sent by the Initiator will be considered valid.","Once the Timed Request Action is received, the Target must acknowledge the Timed Request Action with a Status Response Action. Once the Initiator receives a Status Response Action reporting no errors, it will send a Invoke Request Action.","Timed Invoke Transaction"]},{"i":"invoke-request-action-1","l":"Invoke Request Action","p":["Same as the previously described Invoke Request Action."]},{"i":"invoke-response-action-1","l":"Invoke Response Action","p":["Same as the previously described Invoke Response Action"]},{"l":"Timed Invoke Restrictions","p":["All invoke commands may be called on a Timed Interaction. The Timed Request Action, the Invoke Request Action and the Invoke Response Action are Unicast-only and thus can't be used as groupcast on Timed Invoke Transactions.","The Invoke Request Action supports the usage of paths with Groups, as well as wildcards, but the Invoke Response Action does not support wildcard usage.","This content was originally published on the Google Developer Site"]}],[{"l":"Discovery"},{"l":"Commissionable discovery","p":["12 bit","16 bit","As per the Matter specification, Vendor ID and Product ID are not required but can be included. The Discriminator is mandatory and is crucial during the commissioning process to provision the correct device, in case multiple identical devices are connected at the same time. Extended data may be used to encode custom vendor-specific information.","Automatic Announcement","Bluetooth low energy (BLE)","Commissionable discovery happens before Commissioning and refers to the process of discovering and identifying a commissionable Node. There are two methods through which a commissionable Node may advertise itself:","Discriminator","Domain name service - service discovery (DNS-SD) on an any IP network the Node is connected to","Extended data","Field","In either method, the commissionable node advertises information as shown in the table below.","Length","Locks and barriers access devices","Many devices will advertise for a short period of time (~ 3-15 minutes) after power-up. Other devices must not start advertising either because their primary control does not originate from the fabric or because automatic unprovisioned advertising of devices such as locks isn't safe. This table summarizes the behavior.","Most control does not originate from fabric. For example, dishwasher or refrigerator.","Most control originates from fabric. For example, switch or light bulb.","No","Primary Device Function","Product ID","Required","variable","Vendor ID","Yes"]},{"l":"Bluetooth Low Energy","p":["In this mode of advertisement, the Commissioner will see BLE advertisements. The Commissionee must implement a Generic access profile (GAP) peripheral interface and advertise its uncommissioned state periodically. For the first 30 seconds after a device is turned on the advertisement frequency must be high, at 20 to 60 milliseconds intervals.","After 30 seconds, the device must advertise at a low frequency, at 150 to 1500 millisecond intervals. When commissioned to its first fabric, the device must stop its BLE advertisement.","The Commissioner does not need to issue scan requests. It should do a passive scan on the three BLE advertising channels: 37 (2402 MHz), 38 (2426 MHz) and 39 (2480 MHz). These channels are picked from regions in the spectrum with minimal overlap with Wi-Fi Channels, minimizing interference cross-radio interference.","BLE is not used for operational discovery."]},{"l":"DNS-SD","p":["In this case the Commissionee will be discovered by its DNS-SD advertisements that contain information on services rendered by the nodes. See RFC 6762 for more information about DNS-SD. This is a common method of device discovery when:","The Commissionee is connected to Ethernet and thus has physical access to an unencrypted network medium.","The Commissionee has joined the Wi-Fi or Thread network by any out-of-band means.","The Commissionee was already commissioned to another fabric and has joined the Wi-Fi/Thread network. In this case the Commissionee can't use BLE advertisements. Thus all secondary fabrics are provisioned through this method.","Thread devices don't directly use DNS-SD, but instead use a proxied method provided by the Thread Border Router. This method is defined by the DNS-SD Service Registration Protocol and its Advertising Proxy. Thread devices register themselves in the SRP service typically provided by a Thread Border Router. This service handles mDNS traffic on behalf of each registered Thread node without burdening the Thread network with additional traffic generated by these protocols.","The DNS-SD instance name for device discovery is _matterc._udp and the host names are built by either a 48-bit MAC address or a 64-bit MAC Extended Address, expressed as a hex string such as A5F15790B0D15F32.local.. Generally this record is only advertised when the Commissionee may be commissioned. However, it may also continue advertising when not in commissioning mode. That behavior is named extended discovery.","After discovery, IPv6 addresses are returned in the AAAA records and key/value pairs are returned in the DNS‑SD TXT record. The key/value pair contains information such as the Discriminator, Vendor ID, and Product ID. The node also advertises commissioning subtypes, which enables filtering of results to find only Commissionees that match a particular attribute."]},{"l":"Operational discovery","p":["Operational discovery is the process of discovering and identifying a commissioned node. Operational discovery only happens through the IP-based DNS-SD method. The node instance name will be composed of the 64 bit compressed Fabric ID and 64 bit Node ID. These IDs in hexadecimal are then concatenated with a hyphen, such as in 2906C908D115D362-8FC7772401CD0696.local.. Operational discovery shares the same target host name as DNS-SD Device Discovery.","The DNS-SD service type is _matter._tcp. Although _tcp naming is used, the device might use other transports such as UDP."]},{"l":"Commissioner discovery","p":["Commissioner discovery is the process used by Commissionees to discover Commissioners on the network. Commissioner discovery only happens through the IP-based DNS-SD method.","With Commissioner Discovery, a Commissionee, upon user interaction, can discover Commissioners on the network and obtain a list of information for each which may include Vendor ID, Product ID and friendly name. A Commissionee with a user interface, such as a Television, Thermostat or Video Player device, can then display the list of discovered commissioners to the user for selection. Once selected, the Commissionee can use the User Directed Commissioning protocol with the Commissioner to indicate that the user has selected it for commissioning of the Commissionee. The Commissioner Discovery service records thus enable a form of \"door bell\" protocol to allow a Commissionee to request Commissioning.","The DNS-SD instance name for commissioner discovery is _matterd._udp and the host names are built by either a 48-bit MAC address or a 64-bit MAC Extended Address, expressed as a hex string such as A5F15790B0D15F32.local.. similar to commissionable node discovery.","After discovery, IPv6 addresses are returned in the AAAA records and key/value pairs are returned in the DNS‑SD TXT record. The key/value pair contains information such as the Discriminator, Vendor ID, and Product ID. The node also advertises commissioning subtypes, which enables filtering of results to find only Commissioners that match a particular attribute.","This content was originally published on the Google Developer Site"]}],[{"l":"The Fabric","p":["The Matter spec uses sophisticated methods for encrypting and decrypting information, as well as safe mechanisms for assuring a Node's identity and sharing cryptographic credentials.","Whenever a set of Devices in a network shares the same security domain, and thus allows secure communication between Nodes, this set is called a Fabric. Devices within a fabric share the same Certificate Authority (CA) top-level certificate (Root of Trust) and a 64-bit identifier named Fabric ID, unique within the context of that CA.","Thus the commissioning process is the assignment of the Fabric credentials to a new Node so it may communicate with other Nodes in the same Fabric."]},{"l":"Operational credentials","p":["The Root of Trust is set on a Node under commissioning by the Commissioner, typically a device with some type of GUI, such as a smartphone, hub or computer, after receiving it from an Administrative Domain Manager (ADM), which will often be an ecosystem that acts as a Trusted Root CA.","The Commissioner has access to the CA. Thus it requests the Node Operational Credentials from the CA on behalf of the node being commissioned or Commissionee. The credentials are made of two parts:","Node Operational Identifier (or Operational Node ID) is a 64-bit number that uniquely identifies every Node in the Fabric.","Node Operational Certificate (NOC) is the set of credentials that Nodes use to communicate and identify themselves within a Fabric. They are generated by the Node Operational Certificate Signing Request (NOCSR) process.","NOCSR is a procedure that runs on Node being commissioned. It binds several cryptographical elements, then sends them to the Commissioner, who requests the CA ecosystem for its corresponding NOC. This diagram depicts this dependency tree and the order by which some operations occur.","NOC Generation Dependencies","While understanding each cryptographic element is important for SDK development, it is outside of this document's scope to fully analyze their role and implications. What's important to note is that:","NOCs are issued by the CA ecosystem on real-world production fabrics.","NOCs are cryptographically bound to the unique Node Operational Key Pair (NOKP).","NOKP is generated by the node being commissioned during the commissioning process.","The NOCSR information sent to the ecosystem includes the Node Operational Public Key, but the Node Operational Private Key is never sent to the Commissioner or to the CA.","The NOCSR process uses inputs from the Attestation Procedure, signing the CSRSR information, and thus validating the request for the CA to generate a trusted NOC.","The Attestation procedure is a process used by the Commissioner to certify that:","The Device has gone through Matter certification.","The Device is indeed is what it claims to be: it cryptographically proves its Vendor, Product ID and other manufacturing information."]},{"l":"Multi-Admin","p":["Nodes may also be commissioned on more than one Fabric. This property is often referred to as multi-admin. For instance, we may have a Device commissioned to both the manufacturer's Fabric and a cloud ecosystem's Fabric, with each Fabric handling a different set of encrypted communications and operating independently.","As several Fabrics may coexist, a Device might have several sets of Node operational credentials. However, the Node's Data Model is shared: the Cluster Attributes, Events, and Actions are common between Fabrics. Thus, although Thread and/or Wi-Fi credentials are set during the commissioning process, they are part of the Networking Operational Cluster, being shared between all the Fabrics and part of the node's DM, not the Fabric credentials.","This content was originally published on the Google Developer Site"]}],[{"l":"Commissioning","p":["Commissioning in Matter refers to the process of assigning Fabric credentials to a new device or app. The Commissioner is the device or app that does the Commissioning process. The Commissionee is the new device or app that needs to be provisioned into the Fabric.","At a high-level, the commissioning flow can be broken down into multiple stages:","Commissioning Flow - High Level"]},{"l":"1 Device discovery","p":["Prior to start of the Commissioning flow, the Commissionee must start advertising itself. The Commissionee may advertise itself using any of the three Commissionable Discovery methods. The Commissionee must also provide the onboarding payload."]},{"l":"2 Connect to device using PASE","p":["Once the Commissioner has seen the advertisement and matches up the Discriminator, the Commissioner uses the passcode from the onboarding payload to do Passcode Authenticated Session Establishment (PASE) to connect to the device. This is the method to securely establish keys that both devices will be able to use to establish communication. At this step, the Commissioner also arms a fail-safe. A fail-safe provides a way to roll back the device to its original state if commissioning doesn't complete successfully."]},{"l":"3 Get Commissionee information","p":["The Commissioner reads all the descriptors from the Commissionee. The DescriptorCluster is on endpoint 0 of the device and describes all the other endpoints. Commissioner also reads the Basic Information Cluster which includes information like the Vendor ID, Product ID, Product Name and the Serial Number. At this step, the Commissioner also reads the device type of the Commissionee which helps drive the UX on the Commissioner side."]},{"l":"4 Regulatory config","p":["The Commissioner configures regulatory information on the Commissionee using the SetRegulatoryConfig command. Regulatory information includes information like configuring the location (indoor/outdoor/both) of the device or setting up the country code."]},{"l":"5 Commissionee attestation","p":["The goal of the Commissionee attestation procedure is to determine whether a device has been certified and is a genuine Matter device. Commissioner extracts the Device Attestation Certificate (DAC) and the Product Attestation Intermediate (PAI) certificate from the Commissionee. These certificates contain the Vendor ID, Product ID and Attestation Public Key. Once the certificates are received, the Commissioner does a challenge request that should be signed by the Attestation Private Key and uses that to establish the authenticity of the Commissionee."]},{"l":"6 Certificate Signing Request (CSR)","p":["The Commissioner sends a Certificate Signing Request (CSR) to the Commissionee. The Commissionee creates a unique operational key pair that will be used in a Certificate Authenticated Session Establishment (CASE) later. The Commissionee returns the resulting CSR information back to the Commissioner."]},{"l":"7 Add Node Operational Certificate (NOC)","p":["The Commissioner uses the CSR information received from the Commissionee and passes it to the Administrative Domain Manager (ADM) to generate a trusted NOC. The Commissioner installs the Root Certificate on the Commissionee using the AddTrustedRootCertReq command and then installs the Node Operational Certificate using the AddNOC command."]},{"l":"8 Network provisioning","p":["The Commissioner configures the operational network on the Commissionee. This step is needed for Thread or Wi-Fi devices. This step is not needed for Ethernet Devices where the device is already connected to the network. It uses ScanNetworks, AddOrUpdateWifiNetwork and ConnectNetwork commands."]},{"l":"9 Operational discovery","p":["Once the newly commissioned node is connected to the network, the Commissioner uses Operational Discovery to find the node on the operational network. Operational discovery is the process by which commissioned nodes are found on the operational network using DNS-SD. If the Commissionee is a Wi-Fi device, it will use mDNS to discover the device.","Operational discovery helps the Commissioner and other Nodes in the network know which IP address and port the Commissionee is using."]},{"l":"10 CASE session establishment","p":["Once the newly commissioned node has been discovered, a CASE session is established between the Commissioner and the device. This session is initiated by the Commissioner and is responded to by the device. In this step, operational certificates are exchanged and a shared trust is established by validating they're in the same logical fabric."]},{"l":"11 Commissioning complete","p":["The Commissioner uses CASE to send the CommissioningComplete command to the newly commissioned device. This is the last step in the commissioning process. CommissioningComplete also automatically disarms the fail-safe timer. Once commissioning is successfully completed, the device operates like any other Node on the operational network.","This content was originally published on the Google Developer Site"]}],[{"l":"Attestation","p":["Certified Devices are Devices that have gone through the Connectivity Standards Alliance (Alliance) Matter Certification Process.","During the commissioning process, a device cryptographically proves (attests) to the Commissioner that:","it is a genuine product","it is a product that passed Matter compliance tests and has been thus certified by the Alliance.","In order to accomplish those goals, the device carries:","A Device Attestation Certificate (DAC) that conveys device's manufacturer ID (VID) and Product ID (PID). The DAC chains up to a set of trusted roots, approved by the Alliance members.","A securely-stored, private key associated with the public key stored in the DAC that proves the device owns this unique certificate.","Certificate declaration is a statement cryptographically signed by the Alliance that states that a tuple (VID,PID) has passed Matter compliance tests.","During the development phase, the manufacturer is able test their Devices without the full Attestation process. Testers should be explicitly informed that the Device is under testing, and it hasn't yet been certified and launched. Once a manufacturer enters a production phase, the ecosystem of the provisioner should enforce all Attestation requirements.","Attestation uses a Public Key Infrastructure (PKI) that leverages Root Certificate Authorities and Intermediate Certificates, in a similar way to the widely adopted server authentication certificates used for SSL/TLS. This process is called the Device Attestation Certificate Chain."]},{"l":"Device Attestation PKI","p":["At the root of the chain of trust stands the PAA CA's public key, which validates signatures from the PAI. Note that the Matter trust store is federated and the set of PAA certificates trusted by commissioners is maintained in a central trusted database (the Distributed Compliance Ledger). Entry of a PAA within the trusted set requires meeting a certificate policy managed by the Alliance.","Certificate Serial Number","Issuer","Lastly, the PAA is the root certificate in the chain and it is self-signed. It includes:","Matter Attestation Public Key Infrastructure","Public Key","Signature","Subject","The DAC is a X.509 v3 certificate. The first version of X.509 was published in 1988 by ITU-T. The X.509 v3 with Public Key Infrastructure Certificate and Certificate Revocation List (CRL) used by Matter is specified by RFC5280. It contains:","The DAC is unique per device and associated with the unique attestation key pair within the product. It is issued by a Certificate Authority (CA) associated with the Device manufacturer.","The DAC's signature is validated against the Product Attestation Intermediate Certificate (PAI), which is also issued by a Product Attestation Authority (PAA). However, a vendor might choose to create one PAI per product (PID-specific), group of products, or for all its products.","The PAI is also a X.509 v3 certificate that includes:","Validity, where expiration can be indeterminate","Validity.","Vendor ID and Product ID (optionally), which are attributes of the MatterDACName in the DAC subject.","Vendor ID and Product ID, which are attributes of the MatterDACName in the DAC subject."]},{"l":"Additional Attestation Documents & Messages","p":["The attestation process has several documents and messages. The following items are a brief overview of their function and composition. The image below aids in the understanding of their hierarchy.","Attestation Document Hierarchy"]},{"l":"Certification Declaration (CD)","p":["The CD allows the Matter product to prove its compliance with the Matter protocol. When a product has been certified by the Alliance, the product maker can request a CD from the Alliance which can then be included in the product firmware. The CD includes among other information:","VID","PID (one or more)","Server Category ID","Client Category ID","Security Level","Security Information","Certification Type (development, provisional, or official)","Signature."]},{"l":"Firmware Information (optional)","p":["The Firmware Information contains the CD Version Number and one or more digests of components in the firmware, such as the OS, filesystem, bootloader. The digests may be either a hash of the software components or a hash of the signed manifests of the software components.","The vendor might as well choose to include in Firmware Information only the \"hash-of-hashes\" of its components, instead of an array of individual hashes.","Firmware Information is an optional element in the Attestation Process and applicable when a vendor has a secure boot environment which handles the Attestation key pair."]},{"l":"Attestation Information","p":["Message sent from the Commissionee to the Commissioner. The Attestation Information combines a Tag-Length-Value (TLV) containing the Attestation Elements and an Attestation Signature. The Attestation Elements contain the metadata related to attestation, encoded in Matter TLV, with the following fields:","Certificate Declaration","Timestamp","Attestation Nonce","Firmware Information (optional)","Vendor Specific information (optional)."]},{"l":"Attestation Challenge","p":["Out-of-band challenge derived during Passcode Authenticated Session Establishment (PASE)/ Certificate Authenticated Session Establishment (CASE) session establishment and used to further secure the procedure and avoid replayed signatures. Comes from either CASE session, PASE session or a resumed CASE session."]},{"l":"Attestation TBS (to be signed)","p":["Message containing the Attestation Elements and Attestation Challenge."]},{"l":"Attestation Signature","p":["Signature of the Attestation TBS, signed using the Device Attestation Private Key."]},{"l":"Attestation Procedure","p":["The Commissioner is responsible for validating attestation information from the Commissionee. It executes the following steps:","Commissioner generates a random 32 byte attestation nonce. In cryptography jargon, a nonce (number used once) is a random number generated in the cryptographic procedure and meant to be used once.","Commissioner sends the nonce to the Commissionee and requests the Attestation Information.","Commissionee generates the Attestation Information and signs it with the Attestation Private Key.","Commissioner recovers the DAC and PAI certificate from the Commissionee, and looks up the PAA certificate from its Matter trust store.","Commissioner validates the Attestation Information. These are the conditions for validation:","DAC certificate chain must be validated, including revocation checks on the PAI and PAA.","VID on the DAC matches the VID on the PAI.","The Attestation Signature is valid.","Nonce in Device Attestation Elements matches the nonce provided by the Commissioner.","Certificate Declaration Signature is valid using one of the Alliance's well-known Certification Declaration signing keys.","Firmware Information (if present and supported by Commissioner) matches an entry in the Distributed Compliance Ledger.","Additional VID/PID validations also take place between the Device Basic Information Cluster, Certification Declaration and the DAC.","This content was originally published on the Google Developer Site"]}],[{"l":"Security & Privacy"},{"l":"Matter Security Principles","p":["Matter was created with security and privacy as key design tenets and provides a baseline for building secure IoT devices. The following are key principles of Matter security."]},{"l":"Comprehensive","p":["Layered approach with authentication and attestation for commissioning.","Every message protected.","Secure over-the-air firmware updates."]},{"l":"Strong","p":["Single strong cryptographic suite based on well-established standards.","Passcodes and certificates used to setup secure sessions.","Device attestation to ensure authenticity."]},{"l":"Easy","p":["Designed to make smart devices easier to implement and use."]},{"l":"Resilient","p":["Designed to protect, detect and recover.","Distributed Compliance Ledger to enhance resiliency and scale."]},{"l":"Agile","p":["Crypto-flexibility to address new developments and threats."]},{"l":"Matter Privacy Principles","p":["Data privacy aims to protect consumers whose personal information is consumed and transacted. Matter embeds data privacy principles for all interactions between devices and software agents that handle personal information. For complete protection, additional support from the environment and infrastructure that Matter devices operate in is needed."]},{"l":"Confidentiality & Integrity","p":["Matter uses the highest possible level of civilian cryptographic standards for network communications to ensure that unauthorized entities cannot easily access or tamper with data communicated between Matter devices."]},{"l":"Proof of identity","p":["Required for Matter devices with cryptographic certificates so data is shared only between known Matter entities."]},{"l":"Open standard","p":["Enables anyone to inspect the template for Matter interactions between legitimate Matter nodes."]},{"l":"Minimizing data","p":["Data shared within Matter interactions is minimized, thereby reducing the potential for inadvertent leakage of information."]},{"l":"Defined purpose","p":["Data shared between Matter nodes is strictly for a defined purpose, namely, for the specific operations of devices as required by the Matter protocol."]},{"l":"Privacy preserving mechanisms","p":["Encryption to ensure that messages or identities of communicating parties are not in clear text on the network."]}],[{"l":"Thread"},{"l":"Low Power","p":["Some Matter Nodes are wired and have energy budgets that allow them to keep their radios continuously on. Other types of Nodes such as sensors have requirements to run for years on a battery, operating their radios on low-power networks such as Thread. The proxy architecture, along with Thread Sleepy End Devices, allows full-powered Nodes to provide both network-level and application-level functionality that insulates their child Nodes from energy-intensive transactions.","A fundamental aspect of Matter is that it works both on high-throughput network mediums such as Wi-Fi and Ethernet, but also on low-latency, low-bandwidth, such as Thread. If all Multicast packets from Wi-Fi were bridged into Thread, we'd overburden the network, and potentially flood it. Thread's goal is to enable IPv6 in low-power, low-latency mesh networking, not high-bandwidth data transfer. While Thread's ICMPv6 pings in a local network are typically under few tens of milliseconds RTT, its total bandwidth is limited to 250 kbps at the IEEE 802.15.4 PHY. With packet retransmissions and overhead, the typical max bandwidth is around 125 kbps. In other words, orders of magnitude less than Wi-Fi.","Frames on the IEEE 802.15.4 PHY are 127 bytes, but the largest (and typical) maximum transmission unit (MTU) of IPv6 packets in Thread is 1280 bytes. Thus IPv6 packets often need to be split into several PHY frames. This process is defined by RFC 4944.","To learn more, refer to IPv6 Addressing in the Thread Primer on openthread.io."]},{"l":"Border Routers","p":["So how can Nodes coexist on both transport mediums while in the same fabric? Although both networks share application-level Matter credentials, they don't share the same link technology. In this scenario, the network needs a Thread Border Router (BR) to enable connectivity. BRs are Stub IPv6 Routers.","Stub Routers enable connectivity between stub networks and regular networks. A Stub Network is a \"last-mile\" network that provides outer connectivity to its members, but doesn't serve as a transit network path between other networks. Typically, Matter Stub Networks are Thread-based. Refer to RFC draft for further information on stub networks.","BRs therefore have the responsibility of being the link between the Stub Network and the Adjacent Infrastructure Network, which is the local Wi-Fi or Ethernet network. They forward only the packets that are relevant to the Thread network.","This process is accomplished by assigning different IPv6 prefixes to Thread and Adjacent Infrastructure Networks. Thus the BR only forwards unicasts to or from the Thread IPv6 prefix.","Border Routers are also responsible for:","automatically configuring IPv6 prefixes and routes for both the Thread and Adjacent Infrastructure Networks so that hosts on either side of the Thread Border router can communicate.","publishing mDNS DNS-SD discovery packets on behalf of Thread Nodes, so they can be discovered on the adjacent infrastructure network.","To learn more, refer to the Border Router guide on openthread.io."]},{"l":"IPv6 Multicast","p":["Group messages are also important as they allow simultaneous control of several Matter Nodes through Multicast. In order to route this traffic into the Thread network, both Matter and Thread implement the Unicast Prefix-based IPv6 Multicast Addressing Scheme defined by RFC 3306.","This method allows the selection of the destination Nodes of a Multicast packet based on their shared IPv6 Unicast prefix.","For example, a Matter Multicast address might look like this: FF35:0040:FDFabric ID00:Group ID","This Table details how this address is constructed:|Bits|Description||--- |--- ||12 bits|0xFF3||4 bits|0x05 Scope: site-local||8 bits|0x00 reserved||8 bits|0x40 Indicates a 64-bit long prefix||8 bits|0xFD Designates a ULA prefix||56 bits|Fabric ID||8 bits|0x00||16 bits|Group ID|","More information can be found in the Multicast section of the Thread Primer and on the RFC itself.","When IPv6 Multicast Addresses are formed, they also include the upper 56-bits of the Fabric ID. The important implication is that the scope of Multicast is within a Fabric, while Unicast addresses are shared between Fabrics. Nodes with many fabrics can potentially have several Multicast addresses defining overlapping Node Groups scoped at each fabric."]}],[{"l":"The Connectivity Standards Alliance","p":["Our wide-ranging global membership is on a mission. That mission is to ignite creativity and collaboration in the Internet of Things, by developing, evolving, and promoting universal open standards that enable all objects to securely connect and interact. We believe all objects can work together to enhance the way we live, work, and play. Learn More","The Alliance is the owner of the Matter specification and its associated marks. We are responsible for the continued development of the specification, the certification of products, and the promotion of Matter.","The Alliance is a member driven organization. The majority of the work on Matter is done by members with the support of their companies, and the Alliance employs a relatively small full time staff to facilitate, co-ordinate and support this work."]}],[{"l":"What We Do"},{"l":"Develop","p":["We create, evolve, and manage IoT technology standards through a well-established, collaborative process. We empower companies with practical, usable assets and tools to ease and accelerate development, freeing them to focus on new areas of IoT innovation."]},{"l":"Certify","p":["Our strong certification programs help Members avoid unnecessary development cycles, ensure compliance, and validate interoperability. Certification and our stamp of approval tell the world they can buy and use Alliance-certified products and platforms with confidence."]},{"l":"Promote","p":["We are allies for a connected future. Our membership, spanning the globe and the IoT value chain, actively seeks to promote the benefits of global, open standards, the value of the IoT to customers and consumers, and to break down the barriers to broad access and adoption of IoT technologies and solutions."]}],[{"l":"How We Work"},{"l":"Working Groups","p":["The Alliance has a number of Working Groups responsible for each of the different standards that we manage.","Matter is one such Working Group, the WG is governed by a Steering Committee. The SC manages overall activities, priorities, scope & budget of the Working Group.","Beneath the Matter Working Group are 3 Sub Groups:"]},{"l":"Marketing and Product Sub Group","p":["The Marketing and Product Sub Group (MPSG) is responsible for capturing use cases, identifying functional/non-functional requirements, and producing marketing requirements documents (MRDs) for hand-over to the Technical Sub Group. They also develop branding, positioning and external communications materials relating to Matter."]},{"l":"Technical Sub Group","p":["The Technical Sub Group (TSG) develops the technical aspects of the Matter from the requirements given to them and takes this through specification release. The Matter TSG also has an active Software Development Tiger Team who maintain and develop the open source Matter SDK."]},{"l":"Certification Sub Group","p":["The Certification Sub Group (CSG) develops methods to test for specification conformance, from test cases & scripts, to test events leading up to specification release."]},{"l":"Tiger Teams","p":["Additionally each Sub Group forms a number of Tiger Teams to focus on a specific topic or item and feed this work up into the sub group. Some teams are ongoing, others are formed for the purpose of a specific deliverable and then dissolved."]},{"l":"Joining","p":["Membership of each working group is open to a member company holding participant or promoter level membership. Once a member company has formally joined a WG then employees of that company can participate in the sub groups and tiger teams."]}],[{"l":"Membership"},{"l":"Join The Alliance","p":["Work with the world’s most innovative companies to create, evolve, and promote universal open standards that connect all IoT devices – regardless of country, network, brand, or function – for a unifying wireless experience that inspires new possibilities for people everywhere."]},{"l":"Membership at a Glance","p":["Curious about which level is right for your company? Below is an overview of the four types of membership available:","Associate Members use standards-based IoT products but do not directly build or manufacture them. To join at the Associate level and certify white-label products, a company must partner with an Alliance Participant or Promoter member through our Certification Transfer Program.","Adopter Members use existing, approved specifications to build products. Adopters can access completed, approved standards documents, certify products through Alliance certification programs, and use Alliance technology logos and trademarks for certified products.","Participant Members contribute to and develop standards they will later adopt and use. Participants can access Alliance Working Groups, are hands-on in developing specifications, and gain early access to draft specifications and testing, with the opportunity to develop and get to market faster.","Promoter Members contribute to, develop, and adopt Alliance standards and enjoy all other member-level benefits. Promoters help lead the Alliance with final approval on all standards, hold a seat on the Alliance Board of Directors, and may lead and participate in Board Committees.","Learn more about how you can join us today!"]}],[{"l":"Resources"},{"l":"Resources for Members","p":["If you are already a member of the Alliance, here are some helpful links found in Causeway (you'll need to log in with your member credentials)."]},{"l":"New Member Orientation","p":["Slides"]},{"l":"Group Links","p":["Matter Working Group","How to Join the Matter Working Group and Subgroups (pg. 32-35)","Meeting Calendar for Matter Working Groups and Subgroups Not seeing a calendar for a specific group? Make sure you’re a member of that group for visibility"]},{"l":"Subgroups","p":["Matter CSG","Matter MPSG","Matter TSG"]},{"l":"Tools","p":["Collaboration Tools (pg. 43-48)"]}],[{"l":"The Matter Specifications","p":["The Matter Specification is updated twice a year in Spring and Fall.","Version 1.0 was published in November 2022","Version 1.1 was published in April 2023","Version 1.2 was published in October 2023","Version 1.3 was published in May 2024","Version 1.4 was published in November 2024","Version 1.4.1 was published in May 2025","The specification is made up of a number of documents:","The Core Specification defines the components and how they interact along with a number of common procedures.","The Application Cluster Specification details the data models used by each cluster that makes up an endpoint.","The Device Library Specification sets out the types of End User device in Matter and which Application Clusters make up that device.","The Namespace Specification (introduced in 1.2) details common data formats and structures used across multiple clusters.","All these documents can be downloaded from The Alliance website.","For members, in-progress versions of the specification can be found in the Secure document access portal(requires CSA member login).","Members that are working on an approved feature and actively contributing to specification development may submit and review content in the Specification GitHub Repository. If you are a Participant or Promoter member and require access to the Specification GitHub Repository as a contributor, please email help@csa-iot.org."]}],[{"l":"Certification","p":["This section contains information on the Matter certification process, including requirements for different certification programs, and steps for obtaining certification.","Certifying a Product","Developing a Certification Program for a New Feature","Guides"]}],[{"l":"Certifying a Matter Product","p":["This guide aims to give an outline of common considerations for the integration of Matter rather than a general outline of the development process of an entire product line.","How companies develop products and apply for certification vary, but they generally follow a sequence similar to the steps outlined below. Additional steps in the development and factory process are expected.","Membership","Development","Self Pre-Test","ATL Testing","Submission for Certification","Factory and Go To Market","OTA and Re-Certification"]}],[{"l":"Membership","p":["Companies need to be a member of the Connectivity Standards Alliance (CSA) in order to certify and release products using Matter.","See Becoming a Member to learn more about joining the CSA.","A Vendor ID is used to identify the manufacturer of products and is required before certifying a product. Vendor IDs are assigned by the CSA and appear in the device firmware and in the attestation certificates to identify the manufacturer and show the product has been properly certified. Companies should send requests for new Vendor IDs to help@csa-iot.org or through the Contact Us page."]}],[{"l":"Development","p":["Some links on this page are only accessible to CSA members.","The process of developing a Matter product is highly dependent on the device being developed, the platform being used, and the policies of the company doing the development. There is no single \"best\" way to integrate Matter into a product. This guide aims to address the common considerations for Matter product development.","Information on the Connectivity Standards Alliance (CSA) open source SDK is available at the Matter SDK documentation site.","Integration of the SDK on specific platforms is covered by the Platform guides."]},{"l":"Matter-specific product considerations","p":["The documentation in this section aims to give a brief overview of some of the common product and factory considerations and challenges that may differ from non-Matter products.","Matter devices require some material to be provisioned at the factory, after certification. Some of these materials need to be provisioned on a per-device basis, some are per-product-line.","Most platforms provide a comprehensive factory data solution customized to Matter materials. To learn more, see the documentation for your selected Platform."]},{"l":"Device Attestation Certificates and Certification Authorities","p":["A list of PKI providers can be found on the CSA site:","As a part of the attestation chain, each attesting product needs to be provisioned with:","Attesting products can either opt to purchase DAC provisioning packages from a Matter PKI provider or use their own PAA by operating a Certification Authority (CA) that conforms to the CSA PKI requirements. Both of these options have an impact on the operational and/or BOM costs of the product and should therefore be considered early in the process. More information about this important product decision can be found in Getting a DAC for your product.","Certificate Policy Self-Attestation Compliance Form","Covered by the Security Attestation declaration","CSA PKI CPS Template","Device Attestation Certificate (DAC)","Device attestation certificates are used to attest devices (or commissionable apps, in the case of Matter Casting) as being authentic devices that are manufactured by the stated vendor and certified as a Matter device. The full attestation procedure and certificate set is described in the Handbook's Device Attestation section. The attestation certificate chain matches the Vendor and Product IDs declared on the device and in the certification declaration.","Device attestation private key","Matter PKI Certificate policy","Operation of a CA is covered by the PKI certificate policies and attested by the CPS.","Private, stored in the secure subsystem where possible","Product Attestation Authorities","Product Attestation Intermediate (PAI)","Public","See section 6.3.2 Firmware information of the Matter specification","Signed by a PAA (whose certificate is found in the DCL)","Signed by a PAI","The DAC and PAI are provided by the product being commissioned (device, app, etc), and the PAA is distributed in the DCL and does not appear on the product.","The device attestation chain consists of the Device Attestation Certificate(DAC), which is signed by the Product Attestation Intermediate (PAI), which is signed by the Product Attestation Authority (PAA)."]},{"l":"Development DACs","p":["During the development phase, developers often opt to use test DACs using the test Vendor IDs. The SDK has a number of example DACs that chain up to the SDK test PAAs and these are loaded by default by the example apps. The development controllers load the test PAAs by default, which simplifies development.","Development controllers can be switched to use production PAAs by using the --paa-trust-store-path parameter.","Test DACs are not permitted during certification testing, and devices must arrive with two instances with individually provisioned DACs in order to show that the device can meet the requirements around individual provisioning. Devices at certification are not required to use production DACs.","Device manufacturers may wish to consider joining the CSA early in the process to understand the details of the security procedures within the Alliance."]},{"l":"Certification Declaration (CD)","p":["The Certification Declaration (CD) is provided by the CSA after an attesting product is certified. It is tied to the Vendor ID and Product ID (or IDs) of the certified product, and is signed by CSA. The public key corresponding to the signing key is well known and distributed by the CSA through the DCL.","CD Signing Certs Root CA","CD Signing Cert SKIDs","The CD is NOT a standard X.509 certificate, but is instead a CMS-encoded SignedData payload containing a TLV-encoded structure, described in section 6.3.1 Certification Declaration of the Matter specification. Certification Declarations can be viewed using the Certificate Tool.","The Certification Declaration for the product line is provided after certification testing, and therefore cannot be hard-coded in the firmware. New Certification Declarations are issued for each certified firmware update. Therefore, product development should include a strategy for initial provisioning and updates of the Certification Declaration.","See Preparing a Device for Certification for discussion of CDs used for certification testing."]},{"l":"Matter onboarding materials (QR codes and manual codes)","p":["In addition to DACs, each individual unit needs to be provisioned with its own onboarding material for discovery and initial commissioning. This includes the following per-unit items provisioned on the device:","discriminator","PAKE verifier (encodes the passcode and PAKE salt)","PAKE salt","It also includes the following items encoded on the device exterior or packaging, both of which encode the discriminator and passcode for the corresponding unit:","QR code","manual code","Manual codes are required for all devices, QR codes are optional but recommended. The rules for QR and manual code inclusions are covered in section 5.7.6 and section 13.6 of the specification.","Information about on-package badging and QR and manual codes are documented in the Brand Guidelines."]},{"l":"In-field updates to Matter","p":["If a product that has already been released with non-Matter firmware wishes to update to include Matter functionality, the Matter firmware and supporting materials can be installed on the in-field devices using their already available, non-Matter update mechanism. Devices can continue to use their original update mechanism for future Matter updates, or may opt to use the Matter-specified Over-the-Air (Matter OTA) update mechanism.","In-field update considerations are discussed in section 5.8 of the specification. It is important to note that in-field products are subject to the same per-unit requirements as Out-of-Box Matter products. It is therefore important to consider not only how to distribute the firmware but also either how to display the on-boarding material or perform a background commissioning. It is also necessary to provision the per-unit materials discussed earlier in this section in a secure manner, using the security materials present on the device before the update."]},{"l":"Certification programs","p":["Product developers should be aware of the various certification programs and how they may impact the product development process across the entire line.","In particular:","Products considering software component certification should understand which types of products and operating environments qualify for this program.","Products with various SKUs and variants should understand the portfolio certification program and what constitutes a viable portfolio parent.","Bridge devices should understand the bridge certification program and how certification of the supported device types works.","Product manufacturers should be aware that the CSA has a sunset policy in effect for prior specification revisions. See the Sunset Policy for more information."]},{"l":"Distribution of Over-the-air updates (OTA) and re-certification","p":["As development continues on the Matter SDK, developers continue to find and fix bugs, improve performance and maintainability. Ongoing specification development works to improve interoperability and performance with new features. For these reasons, its important to consider delivering software updates using either the Matter OTA mechanism or a manufacturer-specific mechanism.","The mechanism for delivering OTAs is an important product consideration that needs to be built into the shipping firmware. Update cadence affects the certification planning for products since all updates need to be re-certified."]}],[{"l":"Self Pre-Test","p":["Some links on this page are only accessible to CSA members.","Before submitting a product for formal certification testing, doing a self pre-test is important to identify and fix certification-blocking bugs.","During formal certification, tests are run through the test harness, which provides logs and certification materials for submission to the certification program. In the self pre-test phase, tests can either be run through the test harness or locally on a desktop for faster test iteration."]},{"l":"Test selection and PICS","p":["The set of tests required to certify a device is determined from the Protocol Implementation Conformance Statement (PICS). This conformance statement is filled out by the manufacturer using the PICS tool and the set of templates for a specific release of the specification: PICS XML files.","Detailed information about PICS, how to fill them out, and the tools available is available in the PICS guide."]},{"l":"Running tests","p":["When tests are run for certification, they are run through the test harness, which is used to assist ATLs with test selection and the collection of logs required for submissions to the certification program. The test harness runs on a Raspberry Pi, external to the development computer. This is the official tool for test submission for certification.","When iterating on software development, it is often easier to run tests locally. It is common for manufacturers to run tests locally until they are certain the tests are passing, then move on to use the official tool.","The certification program uses a combination of different types of testing for certification. Tests can be automated in YAML or Python.","Tests that are automated in YAML are located in the YAML SDK folder.","Tests that are implemented in Python are located in the Python SDK folder.","Some tests are not automated for various reasons, and consist of a set of manual steps that the tester needs to perform and check. These tests are run from the verification steps document, which can be found in the official release documentation for each specification revision."]},{"l":"Running tests locally","p":["Information about running tests locally can be found in the SDK documentation:","YAML","Python"]},{"l":"Running tests on the test harness","p":["A full description of how to build the test harness and run tests is available in the test harness user guide. Each specification release contains a version of the test harness user guide specific to that release. The user guide for each release is available in the Matter release folder."]},{"l":"Fixing bugs","p":["Documentation around common problems when running tests can be found in the matter-test-scripts repository.","The CSA has a dedicated Slack channel for test harness questions at (#csg-matter-test-harness-help).","Questions about tests for specific clusters can also be directed to the supporting Tiger Team.","In the case where a test case bug is identified, the affected manufacturer should file a request with the Change Control Board (CCB). Information about the CCB process can be found in the CSA policies and procedures, chapter 11.","CCB requests are filed in the CCB tool."]}],[{"l":"ATL Testing"}],[{"l":"Submission for Certification"}],[{"l":"Factory and Go to Market"}],[{"l":"OTA and Re-certification"}],[{"l":"Developing a Certification Program for a New Feature","p":["Placeholder for this content."]}],[{"l":"Guides","p":["This section contains detailed guides about specific parts of the certification processes.","PICS and PIXITs"]}],[{"l":"PICS and PIXIT"},{"l":"PICS","p":["Additionally, there are node-level PICS, which appear as a part of the MCORE PICS set. These PICS codes describe node level support such as the radio, whether the device is commissionable, whether the device comes with a QR code, etc.","ANC.C","ANC.C.A0000","ANC.C.A0001","ANC.C.C00.Rsp","ANC.C.C01.Rsp","ANC.C.C02.Tx","ANC.C.E00","ANC.C.F00","ANC.C.F01","ANC.S","ANC.S.A0000","ANC.S.A0001","ANC.S.C00.Rsp","ANC.S.C01.Rsp","ANC.S.C02.Tx","ANC.S.E00","ANC.S.F00","ANC.S.F01","CODE","Desc","Device accepts ANC command 0x00 on the ANC server cluster","Device accepts ANC command 0x01 on the ANC server cluster","Device ANC client is capable of reading or subscribing to attribute 0x0000","Device ANC client is capable of reading or subscribing to attribute 0x0001","Device ANC client is capable of sending the command with id 0x00","Device ANC client is capable of sending the command with id 0x01","Device ANC client is capable of understanding the feature with bit 0","Device ANC client is capable of understanding the feature with bit 1","Device ANC client understands the command response with id 0x02","Device ANC client understands the event with id 0x00","Device generates ANC command response 0x02 on the ANC server cluster","Device generates ANC event 0x00 on the ANC server cluster","Device implements ANC attribute 0x0000 on the ANC server cluster","Device implements ANC attribute 0x0001 on the ANC server cluster","Device implements ANC feature at bit 0 on the ANC server cluster","Device implements ANC feature at bit 1 on the ANC server cluster","Device implements the ANC cluster as a server","Device supports an ANC client","Each PICS code is a binary value that describes the presence or absence of a particular element or capability on a device. Each cluster has a defined PICS prefix string and defines a set of PICS codes to describe whether the cluster is present, and the presence of each feature, attribute, command, and event for both the server and client side.","For example if there was a cluster ANeatCluster with the PICS code ANC, two features (bit 0 and 1), two attributes (0x0000 and 0x0001), two accepted commands (0x00 and 0x01), a single command response (0x02) and one event (0x00), the following PICS codes would be defined","In addition to these standard cluster PICS, other PICS may be defined to describe capabilities that are not directly expressed via the data model. For example, whether the device responds to manual operations that affect the Matter data model.","In many Standards Defining Organizations including the CSA, the concept of a“Protocol Implementation Conformance Statement” or “PICS” code is introduced to simplify description of protocol elements.","More information about the PICS code format can be found at PICS Guidelines. (requires access to the CSA specifications repo)","PICS are used in testing in two ways. \"Top level\" PICS appear at the top of the test plan and indicate whether an entire test case should be run. For example, a test case for ANeatCluster would have a top-level PICS of ANC.S to indicate that the test would only be run if the ANC cluster is present on the endpoint. Test cases also use PICS to gate individual steps of the test which are not applicable if a certain element or capability is not implemented.","The entire collection of PICS codes for a specification release is provided as a set of PICS XML files. These files are loaded into the PICS tool, which is used to manually set all the PICS codes for a device. The PICS XML files and the PICS tool are distributed as part of the official specification release package and are available to members on Causeway(requires CSA member login)."]},{"l":"PIXITs","p":["PIXIT stands for Protocol Implementation eXtra Information for Testing. A PIXIT value provides an implementation-defined condition or value that is required by the test.","PIXIT values are used to convey information that is required for testing, but not normally available to a client interacting with the device. For example, the key for a test event trigger on the device, or the network credentials for the test harness.","More information on PIXITs and the PIXIT format can be found in the PICS Guidelines."]},{"l":"Creating PICS conformance statements for Matter devices","p":["Because Matter devices may contain multiple, differing instances of the same cluster on multiple endpoints, it it not possible to unambiguously describe a Matter device with a single set of cluster-based PICS files. Instead, Matter devices use a full set of PICS XML files to describe each endpoint.","To create a conformance statement for a Matter device, for each endpoint, load the full set of PICS XML files into the PICS tool, and select each of the PICS elements present for the endpoint being described. Documentation on how to use the PICS tool can be found in the PICS tool readme in the tool menu.","Some of the full-node MCORE elements really only apply to the root node, while others apply across all endpoints. For example, the entire device is commissionable, but commissioning tests only need to be run against EP0, so MCORE PICS should be set on the EP0 PICS set. Things like MCORE.IDM apply to every endpoint."]},{"l":"Helper scripts","p":["The official tooling for CSA certification is the PICS tool provided as a part of the release. PICS files need to pass validation on the PICS tool to be valid for certification.","However, in Matter, many of the PICS codes correspond directly to elements that are exposed directly on the device. For example, cluster presence is determined from the server list on an endpoint. Feature maps and attribute and command lists correspond directly to the PICS.S.Fxx, PICS.S.Axxxx and PICS.S.Cxx.Xx PICS codes. The Matter SDK provides a tool to pre-fill these values in the PICS XML files so they do not have to be individually, manually filled in the PICS tool.","PICS Generator","PICS codes filled using this tool should still be validated by the PICS tool. Note that due to device limitations, the tool will NOT fill the following categories of PICS codes, and these will need to be filled manually in the PICS tool:","Optional or conditional event PICS (PICS.S.Exx)","Client PICS","MCORE (base.xml) PICS","Manual or other non-element PICS","PICS describing whether optionally-writable attributes are writable","Any other non-element PICS","It is important to note that this script is NOT the official tool for PICS generation, just a helper to assist with this manual process. It is very important to go back and check that the values are as expected and to fill in the other PICS."]},{"l":"Verifying PICS using the IDM-10.4 certification test","p":["While not all PICS are verifiable on the device, we do have tests that verify the declared PICS against the device. This is one of the first tests that should be run at certification, as the PICS files are what determine which set of tests are required.","To run these tests locally, follow the instructions at Running Python tests locally. The PICS checker test is TC-IDM-10.4, implemented in TC_pics_checker.py. These tests run a single set of PICS XML files against an endpoint. The--endpoint and --PICS flags are therefore required.","Note that you can run tests locally against the PICS XMLs for an endpoint by supplying the name of the directory containing the set of PICS XML files for that endpoint."]},{"l":"Setting PIXITs for Matter devices","p":["Matter tests do not currently have support to read PIXIT values from the PICS XML files. Instead, tests implement PIXITs as test-specific flags. When running locally, these are specified on the command line. When running in the test harness, these are specified in the test parameters section of the test configuration."]},{"l":"PICS for test selection","p":["The official source that the CSA certification team uses to determine if all the required tests have been run at certification is the submitted set of PICS XML files and the PICS tool.","To generate this set of tests for each endpoint, load all the filled PICS XML files for a single endpoint into the PICS tool and validate the PICS files. The PICS files should validate properly. This will also generate the list of test cases.","Note that the test harness will also guide test selection by pre-selecting the required tests based on the PICS file, but it is the responsibility of the testers and the ATL to ensure that all the required tests are run and the results are submitted."]}],[{"l":"Matter FastTrack Recertification FAQ","p":["A spec version that is certifiable at the time of applying for recertification using FRP","As there is no testing involved in a certification obtained by CTP or Expedited Transfer, this allows those Members who are not able to access Rapid Recert training, to benefit from the Fast Track Recert program.","As with any new standard and its implementation, the first few generations of products incorporate improvements in many areas such as reliability, resiliency, scalability, features, and even simple bug fixes. With Matter we have found that the best products issue software updates to pick up these improvements, but feedback from Matter product makers has been that the cost and overhead of recertification can create obstacles to providing such updates. We took that feedback seriously and to that end introduced the Matter FastTrack Recertification and Portfolio Certification programs to Members in November 2024. The new FastTrack Recertification program streamlines the recertification process for product makers, reducing costs and overhead for releasing important updates. Both FastTrack and Portfolio programs can help reduce the TCO for high-quality Matter end products and families of products.","Can I use the Fast Track Recert program with the Certification Transfer Program (CTP)?","Clarifies Total Cost of Certification","Critical bug fixes","Device improvements and bug fixes","Each iteration of Matter includes bug fixes and performance improvements. Enabling Members to quickly and cost-effectively upgrade to the latest version of the Matter SDK enables a better user experience for Matter products.","Encourages Rapid Improvement in Quality Products","Enhances End User Experience","FastTrack Recertification enables Members who are trained in the use of certification tools to perform their own testing and validation of software updates. This Trust-but-Verify approach to recertification eliminates many of the costs and additional time-consuming steps for product makers, decreasing overall TCO for high-quality Matter end products. FastTrack allows Members to self-test without additional Log Review by an Authorized Test Lab (ATL) or additional Alliance fees. In order to qualify for the FastTrack Recertification program, a Member company must meet certain qualifications such as tool training, and must submit two units of their product to the Alliance Interoperability Testing Facility (Interop Lab) within a certain time period. By providing product samples to the Interop Lab, additional testing can be done to verify the behavior of the latest version of products on the market.","First, you need a Matter certified product. All Matter devices must go through Initial Certification.","Fixes to improve interoperability","Helps provide predictability in the business case for making Matter products, because Members will better understand the total cost associated with certification over the lifetime of products, during which software updates are expected.","How do I know if my product qualifies for FastTrack Recertification?","How do I send my products to the Interoperability Testing Facility?","I have a Certified product. What do I need to do now to take advantage of this program?","Matter FastTrack Recertification is a new program for recertification of previously certified Matter products that reduces the cost and friction involved in releasing software updates for these products. With FastTrack, Alliance Participant and Promoter Member companies that are trained in the proper use of Matter Certification tools can perform their own testing of updated products and obtain Matter certification of the result for no additional Alliance fee. The conformance of every certified Matter product is initially validated by an Alliance-approved Authorized Test Lab (ATL), but with FastTrack, qualified Member companies in many cases can validate their own conformance of software updates to their certified Matter product without being required to return to the ATL.","Members may deploy bug and security fixes without external schedule dependencies such as ATL validation or waiting for completion of Alliance recertification documentation verification and payment processing. It reduces obstacles to Members upgrading their products to the latest version of Matter, improving the experience for Matter product customers.","Provided that you obtained your original certification via a Certification Transfer, you can subsequently use the Fast Track Recert program to obtain an Expedited Transfer when your original device developer (Transfer partner Member) updates their original product using the Fast Track program. In the case of an Expedited Transfer, the application process is the same as the original transfer, however, there is no certification fee associated with obtaining the recertification for your updated transfer product.","Reduces Certification Fees","SDK updates recommended by Matter SC and approved by the TCOC","Second, you must attend a training to become qualified for the self-testing; there are two paths to completion. The first path is to attend a specification validation event (SVE); the second path is to attend Rapid Recertification Training offered during Alliance Member meetings.","Security fixes","Step 0 Train Members of your development team to become qualified to use this program by attending formally approved Rapid Recert Training programs","Step 1 Test internally using the established Alliance-provided test suite. This will confirm protocol compliance.","Step 2 Submit your documents to the Alliance Certification Team.","Step 3 Send 2 units to the Alliance Interoperability Testing Facility (Interop Lab). Alliance engineers will perform tests across Operating Systems and Ecosystems to confirm that your product works in the real world. It is not necessary to wait for the completion of the interop testing. You are permitted to implement your s/w update on your product, and ship it/OTA upgrade to deployed devices, as soon as step 2 is completed. It’s important to note that while you don’t need to have tests run at an ATL, you do need to run the tests internally and keep the logs for 5 years.","The Alliance reserves the right to restrict the use of FastTrack for certain specification updates","The open source SDK includes the latest optimizations and bug fixes to improve the user experience of Matter products. By keeping up-to-date with the latest version of Matter, you can take advantage of new features, bug fixes, security enhancement, performance improvements, and interoperability improvements, increasing customer satisfaction.","The scope of changes permitted is limited to basic software updates; any additional changes to Matter-related functionality must go through General Recertification (including ATL testing). The scope of permissible changes includes:","Updates to a newer spec version","What can Members do now that they weren’t able to do before?","What is Matter FastTrack Recertification?","What other benefits does FastTrack Recertification provide?","Why did we create this new program?","Why should I update to the latest version of the Matter SDK?","With this new approach, recertification fees paid to ATLs and the Alliance can be reduced to zero. Initial certification which requires ATL validation and Alliance certification fees is still required, but subsequent recertifications can be issued without these costs.","You can find more information about the Interop Lab and its additional benefits on the Alliance’s website. You can also contact interop@csa-iot.org."]}],[{"l":"Matter Development","p":["✅","❌","1.4.1","Chipset-specific implementations (e.g. Wi-Fi/Thread)","Compliant with Matter version","Developers have multiple options for creating Matter-certified devices, bridges, or controllers. The official Matter SDK is the recommended choice for most projects, but alternative implementations, such as JavaScript, also offer compelling features for certain use cases.","Ideal for rapid prototyping and testing","JavaScript SDK","Official SDK","Participate in development of new Matter features","The following table provides a general overview of various use cases for the available SDKs:","Use Case","Use for embedded platforms with strict memory and performance constraints","Use on OS-based platforms: Linux, macOS","Use on Windows"]},{"l":"The official Matter SDK","p":["The official Matter SDK, written in C++, is fully aligned with the latest Matter specifications and optimized for embedded devices with strict memory and performance constraints. It serves as the foundation for most chipset-specific SDKs.","The SDK is compatible with Linux and Darwin platforms and supports integration as a binary dependency for Python, Objective-C, and Java bindings. It includes several example applications for different platforms and supports configuration for various endpoints and clusters using the ZAP tool.","To learn more, go to the Matter SDK Documentation."]},{"l":"matter.js - The Matter JavaScript SDK","p":["The JavaScript SDK implements Matter in pure JavaScript, utilizing TypeScript’s typing system for automatic data and system model compliant development. It can be used to build devices, bridges, and controllers running an operating system where a JavaScript runtime, like Node.js, is available.","This SDK includes ready-to-use example projects and is particularly suited for rapid prototyping and testing, thanks to its compliance-by-default approach and the simple but powerful API design.","To learn more, go to the Matter JavaScript SDK documentation.","Note: Some features of the Matter protocol are not yet implemented in the JavaScript SDK. For details about this check the matter.js Compatibility Information."]}],[{"l":"Guides","p":["This section contains detailed explanations of specific areas of Matter. There is not yet comprehensive coverage of all areas but we will endeavor to expand the topics over time.","Distributed Compliance Ledger"]}],[{"l":"Distributed Compliance Ledger (DCL)"},{"l":"DCL Introduction","p":["Account Role involved","Additional information available in the Distributed Compliance Ledger (DCL) Policies, Procedure and Governance.","Compliance status","Data is entered by an approved Vendor account.","Data is entered by the Alliance's Certification Center account.","Data is proposed by the Alliance's Trustee and approved by other DCL Trustees.","Description","Information","PAA Root CAs","Product","Product Attestation Authorities (PAA) Root CAs used by commissioners during Device Attestation process.","The certification status including certification ID, certification date, etc.","The DCL is a blockchain-based system owned and hosted by Alliance members. It is used by the Matter protocol for storing information such as:","The manufacturer or vendor of a device.","The product device including description, software version, OTA information, etc.","Vendor"]},{"l":"Types of nodes that operate in the DCL","p":["Type of Node","Description","Validator Node (VN)","Participates in creating the consensus process to add information into the ledger. The consensus is the process by which the nodes agree on the state and data of the blockchain, ensuring all nodes have a consistent ledger while verifying the validity of transactions.","Sentry Node (SN)","Doesn't participate in consensus and wraps the VN representing it for the rest of the network as one of the ways for DDoS and access protection.","Observer Node (ON)","Doesn't participate in consensus and is optimized for public data read and authenticated write interactions with the ledger."]},{"l":"Types of account roles that can interact with the DCL","p":["Account Role","Description","Trustee","Entrusted to approve or deny other DCL roles and PAA Root CAs in the ledger, as well as to disable Validator Nodes.","Node Admin","Can instantiate a single Validator Node.","Vendor","Can write vendor and product information to the ledger. Alliance members can have one or more vendor accounts.","Vendor Admin","Can add and update the Vendor information table of the ledger.","Certification Center","Can submit, update, delete or revoke certification status of a product based on the Certification application in the Certification Tool."]},{"l":"Main-Net and Test-Net","p":["DCL Deployment","Description","Main-Net","The production environment that is utilized by the public. Transactions on the Main-Net involve real products and data.","Test-Net","Used for testing and development purposes. It provides a safe environment for experimentation and troubleshooting before deploying to the Main-Net."]},{"l":"Access and interaction with the DCL","p":["Write access to the ledger is restricted to approved accounts in the DCL.","Read access is broadly available through observer nodes."]},{"l":"Getting an account for writing to the DCL","p":["Enrollment for Main-Net DCL accounts is managed through the \"DCL Account(s)\" section in the Certification Tool system (Knack). You can request access to the Certification Tool by sending an email to help@csa-iot.org.","The Certification Tool portal will depend on the Membership type.","Enrollment for Test-Net DCL accounts can be requested by sending an email to dcl-admin@csa-iot.org","Review the following document for instructions: HowTo - Writing to the DCL.pdf"]},{"l":"Interacting with the DCL","p":["There are different options available for users and/or systems to interact with the DCL:","Web User Interface, for intuitive navigation.","API, for seamless integration.","Command Line Interface (CLI), for efficient management."]},{"l":"Web User Interface","p":["The Web UI allows users to interact with the DCL through a visual interface, making tasks more intuitive and reducing the likelihood of errors. There is no need to install any application client or configuration setup."]},{"l":"Command Line Interface","p":["The DCL CLI software ( dcld) allows users to interact with the DCL via command line using a connection to a specific available Observer Node. The CLI software is available at the following link: https://github.com/zigbee-alliance/distributed-compliance-ledger/releases.","The instructions for the DCL client are available at the following link: https://github.com/zigbee-alliance/distributed-compliance-ledger/blob/master/docs/how-to.md."]},{"l":"Observer Nodes","p":["An Observer Node (ON) offers APIs or Web User Interfaces for users or systems to interact with the DCL. This facilitates both manual and automated authorized writes, as well as public queries to the DCL.","It is not a requirement to deploy an Observer Node. The Alliance has ONs available in various regions across the globe, including trusted ONs managed by our members. This ensures broad accessibility and reliable interaction with the DCL from different locations."]},{"l":"Main-Net public ONs","p":["1317","26657","443","8443","9090","CN","gRPC","Host Owner","https://main-net.trustasia.com","https://webui.dcl.csa-iot.org","N/A","on-dcl.tuyacn.com","on.dcl.csa-iot.org","on.main-net.trustasia.com","Region","REST","RPC","The Alliance","TrustAsia","Tuya","URL for API","US, EU","Web User Interface"]},{"l":"Test-Net public ONs","p":["1317","26657","443","8443","9090","CN","gRPC","Host Owner","https://test-net.trustasia.com","https://testnet.iotledger.io","N/A","on-dcl-testnet.tuyacn.com","on.test-net.dcl.csa-iot.org","on.test-net.trustasia.com","Region","REST","RPC","The Alliance","TrustAsia","Tuya","URL for API","US, EU","Web User Interface"]},{"l":"FAQs"},{"l":"Why is my Vendor information not listed in the DCL?","p":["Each member must add their own Vendor information using an approved Vendor account.","Review the following document for instructions: HowTo - Writing to the DCL.pdf"]},{"l":"When should I write my product information to the Main-Net DCL?","p":["The DCL's product information comprises a Model and a Model-Version of the product. Members add this information using an approved Vendor account. This can be done before or after completing the certification process. The Compliance entry in the DCL is submitted by the Alliance's Certification team after the certification process is finalized. For this to take place, the Model and Model-Version must already be listed in the DCL, match the data from the Certification Tool, and the member must notify the Certification team that the DCL information is ready.","Review the following document for instructions: HowTo - Writing to the DCL.pdf"]},{"l":"Contact","p":["For any questions related to the DCL, please contact the DCL Admin ( dcl-admin@csa-iot.org)."]}],[{"l":"Glossary & Acronym Decoder","p":["Access Control List. This is a list of entries in the Access Control cluster that grant access privileges to device and groups","ACL","adoc","Alchemy","Alchemy is a command line tool for modifying and transforming Matter spec documents. Alchemy","Alliance","Anywhere on Earth. This acronym is commonly used when discussing deadlines to clarify the exact end time.","AoE","asciidoc","ATL","Authorized Test Laboratory. ATLs run the tests required to certify devices.","CASE","Causeway","CD","Certificate Authenticated Session Establishment. This is the session establishment mechanism used during normal Matter operations","Certification Declaration - this declaration is provided by devices to prove they have passed certification","Certification Sub Group CSG","CHIP","Connectivity Standards Alliance - the member-driven organization that manages the Matter standard","CSA","CSG","DAC","Data Model Tiger Team.","Data Model. The data model describes the organization of data within a cluster. DM is sometimes also used to refer to the DMTT.","Definition","Demand Response Load Control","Device Attestation Certificates. See Attestation","DM","DMTT","DNS-SD","Domain name service (DNS) service discovery. This is the mechanism used to locate Matter devices on the IP network","DRLC","Electric Vehicle Supply Equipment","EVSE","ICAC","ICD","Intermediate Certificate Authority Certificate See Operational Credentials","Intermittently Connected Devices. These device can sleep for relatively long periods and will be unreachable over Matter during these times.","Marketing and Product Sub Group MPSG","Markup language we use to write the specification and test plans. asciidoc","Matter used to be called Project CHIP (Connected Home over IP) before it got its current name. Much of the SDK still uses that prefix.","mDNS","MPSG","Multicast DNS - the mechanism used to perform DNS-SD over Wi-Fi","NOC","NOCSR","Node Operational Certificate Signing Request. See Attestation","Node operational certificate. See Operational Credentials","PAA","PAI","PASE","Password Authenticated Session Establishment. This is the session establishment mechanism used to commission devices.","PICS","PID","PIXIT","Product Attestation Authority. Root certificate for device attestation. See Attestation","Product attestation intermediate - Intermediate certificate for device attestation. See Attestation","Product identifier","Protocol Implementation Conformance Statement. PICS are also used to determine testing requirements for certification","Protocol Implementation eXtra Information for Testing. These are configuration values provided to certification tests.","RCAC","Refers to the Connectivity Standards Alliance (CSA)","Root Certificate Authority Certificate. See Operational Credentials","SDK","Service Registration Protocol. This is the mechanism used to register thread devices for DNS-SD. Border routers implement this protocol to allow Thread device discovery.","Short for specification. [github] ( https://github.com/CHIP-Specifications/connectedhomeip-spec)","Site used to store documents and calendars and track group memberships etc. https://groups.csa-iot.org/","Software development kit - a software package implementing the specification [github] ( https://github.com/project-chip/connectedhomeip)","Software development tiger team. This is the group of people working on the SDK.","spec","Specification Validation Event - this follows the test events and acts as the final check on the certification package for a release.","SRP","SVE","SWTT","TE","Technical Sub Group TSG","Term","Test Event. These events are held during development to verify that test scripts and SDK development are on track.","The filename suffix for asciidoc, which is the markup language we use to write the specification and test plans. asciidoc","Tiger team - a small group focused on one activity or feature.","TSG","TT","Vendor identifier","VID","WG","Work Group. Matter is a working group in the CSA."]}]]